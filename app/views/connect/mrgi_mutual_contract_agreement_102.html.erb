

<style>
    button,input,optgroup,select,textarea{
        color: black!important;
        font: black!important;
    }
    .online-form-template .inline-field-value {
    display: inline-block!important;
    padding: 3px 5px 2px!important;
    line-height: 1.5!important;
    color: #446116!important;
    cursor: pointer!important;
    background-color: #e1e8da!important;
    border: 1px solid #b3ca8f!important;
}
</style>

        <div data-ix="hide-on-load" class="floating-nav">
            <div class="nav-container w-clearfix">
                <a href="#" class="navbar-logo w-inline-block w-clearfix"><img
                    src="https://httpsimage.com/v2/3364f11f-61bb-4567-bf7a-4361ac5ccc87.png"
                    width="57"
                    data-ix="floating-nav-logo-hover-flip"
                    class="navbar-logo floating"/></a>
                <div class="floatingnavfixedtext">Bringing Technology to Life</div>
            </div>
        </div>
        <div class="coversection">
            <div class="covercontainer w-container" data-ix="mrgi-usa-float">
                <h1>MRGI SOG Mutual Contract Agreement Form</h1>
            </div>
        </div>
        <div height="20vh" id="Section-2" class="mainsection--about dark--about">
            <div class="sectionheader--about">
            </div>
        </div>
        <div id="Section-3" class="example bluebackground">
            <div class="example-body minheight perspective--bottom">
            </div>
        </div>
        <div id="Section-3" class="example bluebackground planssection">
            <div class="example-body minheight perspective--bottom adjustmobile3dheight">
                <div data-ix="example-header-appear" class="example-header--about w-container">
                    <a
                        href="#Section-5Plans"
                        data-ix="arrow-appear"
                        class="go-down-link w-hidden-small w-hidden-tiny w-inline-block"><img
                        src="https://httpsimage.com/v2/f61bce67-24f9-4956-a606-1b2f79c9689c.png"
                        width="50"
                        data-ix="arrowhovereffect"/></a><div class="online-form-template ng-scope" style="position: relative; height: 619px; overflow-x: hidden; overflow-y: auto; width: auto;" id="templateCode" data-spy="scroll"><p>
    This Agreement is made between&nbsp;<span class="nolo_field inline-editor question-box-edit-dialog ng-scope ng-isolate-scope" data-field-name="client name" nolo-question-box-edit-dialog="" field="field" value-index="undefined">
    <span class="inline-field-value inlineFormElement ng-binding" ng-click="setActiveField(field.name, $event, valueIndex); $event.stopPropagation();" ng-bind-html="(field.displayValue(false, valueIndex)) | html">Client_Name</span>
    <!-- ngIf: field.hasHelpText() --><i class="icon-question-sign has-help-popover ng-scope" rel="popover" ng-click="showHelpPopover($event)" ng-if="field.hasHelpText()" data-content="<p>
    This can be your own name or a fictitious business name or assumed name you use to identify the client business. For example, if Jane Adams calls her business &amp;quot;ABC Services,&amp;quot; she would use that name on the contract. Using a fictitious business name helps show you&amp;#39;re a business, not an employee.</p>
<p>
    If your business is incorporated, use your corporation name, not your own name -- for example: &amp;quot;John Smith, Incorporated&amp;quot; instead of &amp;quot;John Smith.&amp;quot; If you&amp;#39;re a limited liability company, use the name of your company -- for example, &amp;quot;John Smith, LLC,&amp;quot; instead of just &amp;quot;John Smith.&amp;quot; If you&amp;#39;re a partner in a partnership, use your partnership name -- for example, &amp;quot;The Smith Partnership&amp;quot; instead of &amp;quot;John Smith.&amp;quot;</p>
" style="display: inline"></i><!-- end ngIf: field.hasHelpText() -->
</span>&nbsp;(the "Client") with a principal place of business at&nbsp;<span class="nolo_field inline-editor question-box-edit-dialog ng-scope ng-isolate-scope" data-field-name="client place of business" nolo-question-box-edit-dialog="" field="field" value-index="undefined">
    <span class="inline-field-value inlineFormElement ng-binding" ng-click="setActiveField(field.name, $event, valueIndex); $event.stopPropagation();" ng-bind-html="(field.displayValue(false, valueIndex)) | html">Client_Address_Of_Business</span>
    <!-- ngIf: field.hasHelpText() -->
</span>&nbsp;and&nbsp;<span class="nolo_field inline-editor question-box-edit-dialog ng-scope ng-isolate-scope" data-field-name="developer name" nolo-question-box-edit-dialog="" field="field" value-index="undefined">
    <span class="inline-field-value inlineFormElement ng-binding" ng-click="setActiveField(field.name, $event, valueIndex); $event.stopPropagation();" ng-bind-html="(field.displayValue(false, valueIndex)) | html">Your_Name</span>
    <!-- ngIf: field.hasHelpText() --><i class="icon-question-sign has-help-popover ng-scope" rel="popover" ng-click="showHelpPopover($event)" ng-if="field.hasHelpText()" data-content="<p>
    This can be your own name or a fictitious business name or assumed name you use to identify your business. For example, if Jane Adams calls her Web development business &amp;quot;ABC Web Development,&amp;quot; she would use that name on the contract. Using a fictitious business name helps show you&amp;#39;re a business, not an employee.</p>
<p>
    If your business is incorporated, use your corporation name, not your own name -- for example: &amp;quot;John Smith, Incorporated&amp;quot; instead of &amp;quot;John Smith.&amp;quot; If you&amp;#39;re a limited liability company, use the name of your company -- for example, &amp;quot;John Smith, LLC,&amp;quot; instead of just &amp;quot;John Smith.&amp;quot; If you&amp;#39;re a partner in a partnership, use your partnership name -- for example, &amp;quot;The Smith Partnership&amp;quot; instead of &amp;quot;John Smith.&amp;quot;</p>
" style="display: inline"></i><!-- end ngIf: field.hasHelpText() -->
</span>&nbsp;(the "Developer") with a principal place of business at&nbsp;<span class="nolo_field inline-editor question-box-edit-dialog ng-scope ng-isolate-scope" data-field-name="developer place of business" nolo-question-box-edit-dialog="" field="field" value-index="undefined">
    <span class="inline-field-value inlineFormElement ng-binding" ng-click="setActiveField(field.name, $event, valueIndex); $event.stopPropagation();" ng-bind-html="(field.displayValue(false, valueIndex)) | html">Legal_Address_Of_MRGI_USA</span>
    <!-- ngIf: field.hasHelpText() -->
</span>.<div style="display: inline;display: inline" class="nolo-help ng-isolate-scope" data-field-help-text="<p>
    <span style=&quot;font-size: 12px;&quot;>This can be your own name or a fictitious business name or assumed name you use to identify your business. For example, if Jane Adams calls her Web development business &amp;quot;ABC Web Development,&amp;quot; she would use that name on the contract. Using a fictitious business name helps show you&amp;#39;re a business, not an employee.</span></p>
<p>
    If your business is incorporated, use your corporation name, not your own name -- for example: &amp;quot;John Smith, Incorporated&amp;quot; instead of &amp;quot;John Smith.&amp;quot; If you&amp;#39;re a limited liability company, use the name of your company -- for example, &amp;quot;John Smith, LLC,&amp;quot; instead of just &amp;quot;John Smith.&amp;quot; If you&amp;#39;re a partner in a partnership, use your partnership name -- for example, &amp;quot;The Smith Partnership&amp;quot; instead of &amp;quot;John Smith.&amp;quot;</p>" data-field-required="false" data-field-type="help" disabled="disabled" field="fields.get('party names')" name="party names" src="/ckeditor/plugins/nolohelp/images/help.png" type="text" value="party names">
    <!-- ngIf: field.hasHelpText() --><i class="icon-question-sign has-help-popover ng-scope" rel="popover" ng-click="showHelpPopover($event)" ng-if="field.hasHelpText()" data-content="<p>
    <span style=&quot;font-size: 12px;&quot;>This can be your own name or a fictitious business name or assumed name you use to identify your business. For example, if Jane Adams calls her Web development business &amp;quot;ABC Web Development,&amp;quot; she would use that name on the contract. Using a fictitious business name helps show you&amp;#39;re a business, not an employee.</span></p>
<p>
    If your business is incorporated, use your corporation name, not your own name -- for example: &amp;quot;John Smith, Incorporated&amp;quot; instead of &amp;quot;John Smith.&amp;quot; If you&amp;#39;re a limited liability company, use the name of your company -- for example, &amp;quot;John Smith, LLC,&amp;quot; instead of just &amp;quot;John Smith.&amp;quot; If you&amp;#39;re a partner in a partnership, use your partnership name -- for example, &amp;quot;The Smith Partnership&amp;quot; instead of &amp;quot;John Smith.&amp;quot;</p>
" style="display: inline"></i><!-- end ngIf: field.hasHelpText() -->
</div></p>
<div id="clause-0-wrapper" class="clauseWrapper"><h3 class="clauseHeader" id="clause0"><span class="ng-binding ng-scope">1. </span><span class="ng-scope">
    Definitions&nbsp;<div style="color: rgb(34, 34, 34); font-family: Arial, Verdana, sans-serif; font-size: 12px;;display: inline;display: inline;display: inline;display: inline" class="nolo-help ng-isolate-scope" data-field-help-text="<p>
    This section provides explanations for some terms used in the agreement.</p>" data-field-required="false" data-field-type="help" disabled="disabled" field="fields.get('definitions, help')" name="definitions, help" src="/ckeditor/plugins/nolohelp/images/help.png" type="text" value="definitions, help">
    <!-- ngIf: field.hasHelpText() --><i class="icon-question-sign has-help-popover ng-scope" rel="popover" ng-click="showHelpPopover($event)" ng-if="field.hasHelpText()" data-content="<p>
    This section provides explanations for some terms used in the agreement.</p>
" style="display: inline"></i><!-- end ngIf: field.hasHelpText() -->
</div></span></h3></div>
<p>
    "The Site" means a series of linked Web pages under common control and developed by Developer for Client under this Agreement.</p>
<p>
    "Client Content" means all data, code, trademarks, and copyrighted content provided by Client for use by Developer on the Site.</p>
<p>
    "Developer Content" means all data, code, trade secrets, patents, designs, drawings, text created by Developer for use on the Site, including any modifications or enhancements provided by Developer.</p>
<div id="clause-1-wrapper" class="clauseWrapper"><h3 class="clauseHeader" id="clause1"><span class="ng-binding ng-scope">2. </span><span class="ng-scope">
    Developer Services<div style="color: rgb(34, 34, 34); font-family: Arial, Verdana, sans-serif; font-size: 12px;;display: inline;display: inline;display: inline;display: inline" class="nolo-help ng-isolate-scope" data-field-help-text="<p>
    This form divides the development process into four stages: concept, design, initial development, and final development. Many developer agreements have variations -- for example, using only two stages: initial and final development. Using four stages breaks the project into bit-sized pieces, allowing changes in course at various checkpoints. In the preliminary stage, you and the client simply work on specifications and concepts. After that, a design stage should give you and the client a good idea what the site will be. That&amp;#39;s followed by the initial and final stages.</p>" data-field-required="false" data-field-type="help" disabled="disabled" field="fields.get('developer services, help')" name="developer services, help" src="/ckeditor/plugins/nolohelp/images/help.png" type="text" value="developer services, help">
    <!-- ngIf: field.hasHelpText() --><i class="icon-question-sign has-help-popover ng-scope" rel="popover" ng-click="showHelpPopover($event)" ng-if="field.hasHelpText()" data-content="<p>
    This form divides the development process into four stages: concept, design, initial development, and final development. Many developer agreements have variations -- for example, using only two stages: initial and final development. Using four stages breaks the project into bit-sized pieces, allowing changes in course at various checkpoints. In the preliminary stage, you and the client simply work on specifications and concepts. After that, a design stage should give you and the client a good idea what the site will be. That&amp;#39;s followed by the initial and final stages.</p>
" style="display: inline"></i><!-- end ngIf: field.hasHelpText() -->
</div></span></h3></div>
<p>
    Developer will perform the development services described below. There are four stages of development services: Concept, Design, Initial Development, and Final Development. Developer will complete the four stages on or before the dates listed below. Before delivering the Site to Client, Developer will test its components to make sure the Site and its components work as intended.</p>
<ul>
    <li>
        <strong>Concept.</strong>&nbsp;(Due Date:&nbsp;Within&nbsp;<span class="nolo_field inline-editor question-box-edit-dialog ng-scope ng-isolate-scope" data-field-name="concept due date" nolo-question-box-edit-dialog="" field="field" value-index="undefined">
    <span class="inline-field-value inlineFormElement ng-binding" ng-click="setActiveField(field.name, $event, valueIndex); $event.stopPropagation();" ng-bind-html="(field.displayValue(false, valueIndex)) | html">concept due date</span>
    <!-- ngIf: field.hasHelpText() -->
</span>&nbsp; days of the effective date.)&nbsp;The parties will discuss and agree upon the basic concept for the Client website and Developer shall prepare a written summary of the basic elements of the website's functionality and appearance.</li>
</ul>
<ul>
    <li>
        <strong>Design.</strong>&nbsp;(Due Date:&nbsp;Within&nbsp;<span class="nolo_field inline-editor question-box-edit-dialog ng-scope ng-isolate-scope" data-field-name="design due date" nolo-question-box-edit-dialog="" field="field" value-index="undefined">
    <span class="inline-field-value inlineFormElement ng-binding" ng-click="setActiveField(field.name, $event, valueIndex); $event.stopPropagation();" ng-bind-html="(field.displayValue(false, valueIndex)) | html">design due date</span>
    <!-- ngIf: field.hasHelpText() -->
</span>&nbsp;days of the approval of the Concept Stage.)&nbsp;The parties will discuss and agree upon the design of the Client website and Developer shall prepare a detailed summary of the proposed appearance, operation, and functionality, including a list of all necessary software and materials necessary to launch the Site.</li>
</ul>
<ul>
    <li>
        <strong>Initial Development.</strong>&nbsp; (Due Date:&nbsp;Within&nbsp;<span class="nolo_field inline-editor question-box-edit-dialog ng-scope ng-isolate-scope" data-field-name="initial development due date" nolo-question-box-edit-dialog="" field="field" value-index="undefined">
    <span class="inline-field-value inlineFormElement ng-binding" ng-click="setActiveField(field.name, $event, valueIndex); $event.stopPropagation();" ng-bind-html="(field.displayValue(false, valueIndex)) | html">initial development due date</span>
    <!-- ngIf: field.hasHelpText() -->
</span>&nbsp;days of the approval of the Design Stage.)&nbsp;During Initial Development, Developer shall prepare the following Web pages for the Site:&nbsp;&nbsp; Developer shall demonstrate the following functionality for the Site.</li>
</ul>
<ul>
    <li>
        <strong>Final Development.</strong>&nbsp;(Due Date:Within&nbsp;<span class="nolo_field inline-editor question-box-edit-dialog ng-scope ng-isolate-scope" data-field-name="final development due date" nolo-question-box-edit-dialog="" field="field" value-index="undefined">
    <span class="inline-field-value inlineFormElement ng-binding" ng-click="setActiveField(field.name, $event, valueIndex); $event.stopPropagation();" ng-bind-html="(field.displayValue(false, valueIndex)) | html">final development due date</span>
    <!-- ngIf: field.hasHelpText() -->
</span>&nbsp;days of the approval of the Initial Development Stage.)&nbsp;Developer will complete all requirements for the Site and host it in a manner that Client can view it for a period of at&nbsp;least&nbsp;<span class="nolo_field inline-editor question-box-edit-dialog ng-scope ng-isolate-scope" data-field-name="hosting preview period" nolo-question-box-edit-dialog="" field="field" value-index="undefined">
    <span class="inline-field-value inlineFormElement ng-binding" ng-click="setActiveField(field.name, $event, valueIndex); $event.stopPropagation();" ng-bind-html="(field.displayValue(false, valueIndex)) | html">hosting preview period</span>
    <!-- ngIf: field.hasHelpText() -->
</span>&nbsp;days.</li>
</ul>
<div id="clause-2-wrapper" class="clauseWrapper"><h3 class="clauseHeader" id="clause2"><span class="ng-binding ng-scope">3. </span><span class="ng-scope">
    Evaluation and Acceptance<div style="color: rgb(34, 34, 34); font-family: Arial, Verdana, sans-serif; font-size: 12px;;display: inline;display: inline;display: inline;display: inline" class="nolo-help ng-isolate-scope" data-field-help-text="<p>
    Once the project is underway, the client will want a chance at various points to review what&amp;#39;s been done and to accept or reject it. This clause requires the client to sign off on each phase of the project as it is completed.&amp;nbsp;</p>
<p>
    If the client feels you&amp;#39;ve failed to correct the deficiencies after two attempts, it has the right to terminate the agreement. But, in this event, the client must pay you at an hourly rate for the work you&amp;#39;ve already done. You must indicate your hourly rate in this clause. Also, note that the clause provides that if the client fails to provide approval or comments during any of the approval periods, those materials will be deemed to be approved.</p>" data-field-required="false" data-field-type="help" disabled="disabled" field="fields.get('evaluation and acceptance, help')" name="evaluation and acceptance, help" src="/ckeditor/plugins/nolohelp/images/help.png" type="text" value="evaluation and acceptance, help">
    <!-- ngIf: field.hasHelpText() --><i class="icon-question-sign has-help-popover ng-scope" rel="popover" ng-click="showHelpPopover($event)" ng-if="field.hasHelpText()" data-content="<p>
    Once the project is underway, the client will want a chance at various points to review what&amp;#39;s been done and to accept or reject it. This clause requires the client to sign off on each phase of the project as it is completed.&amp;nbsp;</p>
<p>
    If the client feels you&amp;#39;ve failed to correct the deficiencies after two attempts, it has the right to terminate the agreement. But, in this event, the client must pay you at an hourly rate for the work you&amp;#39;ve already done. You must indicate your hourly rate in this clause. Also, note that the clause provides that if the client fails to provide approval or comments during any of the approval periods, those materials will be deemed to be approved.</p>
" style="display: inline"></i><!-- end ngIf: field.hasHelpText() -->
</div></span></h3></div>
<p>
    As Developer completes each stage, Developer will submit the completed materials to Client for approval. Client will have&nbsp;<span class="nolo_field inline-editor question-box-edit-dialog ng-scope ng-isolate-scope" data-field-name="client days" nolo-question-box-edit-dialog="" field="field" value-index="undefined">
    <span class="inline-field-value inlineFormElement ng-binding" ng-click="setActiveField(field.name, $event, valueIndex); $event.stopPropagation();" ng-bind-html="(field.displayValue(false, valueIndex)) | html">client days</span>
    <!-- ngIf: field.hasHelpText() -->
</span>&nbsp;days to approve the completed materials or provide corrections and comments.&nbsp;</p>
<p>
    Developer will have&nbsp;<span class="nolo_field inline-editor question-box-edit-dialog ng-scope ng-isolate-scope" data-field-name="developer days" nolo-question-box-edit-dialog="" field="field" value-index="undefined">
    <span class="inline-field-value inlineFormElement ng-binding" ng-click="setActiveField(field.name, $event, valueIndex); $event.stopPropagation();" ng-bind-html="(field.displayValue(false, valueIndex)) | html">developer days</span>
    <!-- ngIf: field.hasHelpText() -->
</span>&nbsp;days after receiving Client's comments and corrections to submit a revised version of the materials to Client. Client will review the revised version within&nbsp;<span class="nolo_field inline-editor question-box-edit-dialog ng-scope ng-isolate-scope" data-field-name="client revised days" nolo-question-box-edit-dialog="" field="field" value-index="undefined">
    <span class="inline-field-value inlineFormElement ng-binding" ng-click="setActiveField(field.name, $event, valueIndex); $event.stopPropagation();" ng-bind-html="(field.displayValue(false, valueIndex)) | html">client revised days</span>
    <!-- ngIf: field.hasHelpText() -->
</span>&nbsp;days of receipt and either approve the corrected version or make further changes.&nbsp;</p>
<p>
    If Client determines, in its reasonable discretion, that the materials are not acceptable after two attempts at correction by Developer, Client can terminate this Agreement. If Client fails to provide approval or comments during any of the approval periods, those materials will be considered to be approved.</p>
<p>
    If Client terminates this Agreement under this provision, Developer shall be entitled to compensation on a time and materials basis at an hourly rate of $<span class="nolo_field inline-editor question-box-edit-dialog ng-scope ng-isolate-scope" data-field-name="hourly rate, termination" nolo-question-box-edit-dialog="" field="field" value-index="undefined">
    <span class="inline-field-value inlineFormElement ng-binding" ng-click="setActiveField(field.name, $event, valueIndex); $event.stopPropagation();" ng-bind-html="(field.displayValue(false, valueIndex)) | html">hourly rate, termination</span>
    <!-- ngIf: field.hasHelpText() -->
</span>&nbsp;plus expenses to the date of termination. Developer shall submit an invoice detailing its time and expenses. If the invoice amount is less than the amounts paid to Developer prior to termination, Developer shall promptly return the excess to Client. If the invoice amount exceeds the amounts paid to Developer prior to termination, Client shall pay Developer the difference within 30 days of the date of the invoice.</p>
<div id="clause-3-wrapper" class="clauseWrapper"><h3 class="clauseHeader" id="clause3"><span class="ng-binding ng-scope">4. </span><span class="ng-scope">
    Compensation</span></h3></div>
<div alternate-selection-dropdown-display="" data-field-name="compensation options" labels="labels" options="options" field="field" fields="fields" value-index="undefined" class="ng-scope ng-isolate-scope"><div class="online-form-optional-clause nolo_field" data-field-name="compensation options" ng-click="setActiveField(field.name, $event, valueIndex); $event.stopPropagation();">
    <h4 class="questionText ng-binding" ng-bind-html="(getInterviewText()) | html"></h4>
    <h5><span class="chooseText">Choose one:</span> <!-- ngIf: field.hasHelpText() --></h5>
	    <!-- <select ng-model="selectedDropdownIndex" ng-options="i.id as i.value for i in getLabels()"  ng-disabled="$parent.$parent.isReadOnly()"></select><br> -->
    <select ng-model="selectedDropdownIndex" class="ng-pristine ng-untouched ng-valid"><option value="? string: ?"></option>
		<!-- ngRepeat: item in getLabels --><option ng-repeat="item in getLabels" class="ng-binding ng-scope" value="fixed price agreement">fixed price agreement</option><!-- end ngRepeat: item in getLabels --><option ng-repeat="item in getLabels" class="ng-binding ng-scope" value="&quot;time and materials&quot; agreement">"time and materials" agreement</option><!-- end ngRepeat: item in getLabels -->
	</select><br>
    <table>
        <tbody><!-- ngRepeat: option in options track by $index --><!-- ngIf: isSelected($index, valueIndex) --><!-- end ngRepeat: option in options track by $index --><!-- ngIf: isSelected($index, valueIndex) --><!-- end ngRepeat: option in options track by $index -->
    </tbody></table>
</div></div>
<div multiple-selection-display="" data-field-name="compensation cap" options="options" field="field" fields="fields" value-index="undefined" class="ng-scope ng-isolate-scope"><div class="online-form-optional-clause nolo_field" data-field-name="compensation cap" ng-click="setActiveField(field.name, $event, valueIndex); $event.stopPropagation();" value-index="0">
    <h4 class="questionText ng-binding" ng-bind-html="(getInterviewText()) | html"></h4>
    <h5><span class="chooseText ng-binding">Optional Clause:</span> <!-- ngIf: field.hasHelpText() --><i class="icon-question-sign has-help-popover ng-scope" rel="popover" ng-click="showHelpPopover($event)" ng-if="field.hasHelpText()" data-content="<p>
    Many clients will wish to place a cap on the developer&amp;#39;s total compensation because they fear the invoice will be &amp;quot;padded.&amp;quot; If this is the case, include the optional sentence providing for a cap, but make sure it&amp;#39;s large enough to allow the developer to complete the job.</p>
" style="display: inline"></i><!-- end ngIf: field.hasHelpText() --></h5>
    <table class="multipleSelectionTable">
        <tbody>
            <!-- ngRepeat: option in options --><tr ng-repeat="option in options" ng-class="getClass($index)" ng-click="selectOption($index, valueIndex, $event)" class="ng-scope unselectedClause">
                <td class="optional-clause-answer optionSelection" width="20"><div ng-class="getCheckboxClass($index)"><input type="checkbox" value="0" ng-checked="field.isSelected($index, valueIndex)" ng-disabled="$parent.$parent.isReadOnly()"></div></td>
                <td class="optional-clause-index optionSelection" width="20"><span class="optionIndex ng-binding"></span></td>
                <td class="optional-clause multipleSelectionOption"><div compile-html="option"><div class="ng-scope">
                <p>
                    Unless otherwise agreed upon in writing by Client, Client's maximum liability for all services performed during the term of this Agreement shall not exceed $<span class="nolo_field inline-editor question-box-edit-dialog ng-scope ng-isolate-scope" data-field-name="maximum liability" nolo-question-box-edit-dialog="" field="field" value-index="undefined">
    <span class="inline-field-value inlineFormElement ng-binding" ng-click="setActiveField(field.name, $event, valueIndex); $event.stopPropagation();" ng-bind-html="(field.displayValue(false, valueIndex)) | html">maximum liability</span>
    <!-- ngIf: field.hasHelpText() -->
</span>.</p>
            </div></div></td>
            </tr><!-- end ngRepeat: option in options -->
        </tbody>
    </table>
</div></div>
<div id="clause-4-wrapper" class="clauseWrapper"><h3 class="clauseHeader" id="clause4"><span class="ng-binding ng-scope">5. </span><span class="ng-scope">
    Payment of Developer's Costs<div style="color: rgb(34, 34, 34); font-family: Arial, Verdana, sans-serif; font-size: 12px;;display: inline;display: inline;display: inline;display: inline" class="nolo-help ng-isolate-scope" data-field-help-text="<p>
    Expenses are the costs the developer incurs that are directly attributable to work for a client. They include, for example, the cost of phone calls or traveling done on the client&amp;#39;s behalf. Expenses do not include the developer&amp;#39;s normal fixed overhead costs such as office rent, the cost of commuting, or the wear and tear on equipment. They also do not include materials the client provides the developer to do their work.&amp;nbsp;</p>" data-field-required="false" data-field-type="help" disabled="disabled" field="fields.get('payment of developer\'s costs, help')" name="payment of developer's costs, help" src="/ckeditor/plugins/nolohelp/images/help.png" type="text" value="payment of developer's costs, help">
    <!-- ngIf: field.hasHelpText() --><i class="icon-question-sign has-help-popover ng-scope" rel="popover" ng-click="showHelpPopover($event)" ng-if="field.hasHelpText()" data-content="<p>
    Expenses are the costs the developer incurs that are directly attributable to work for a client. They include, for example, the cost of phone calls or traveling done on the client&amp;#39;s behalf. Expenses do not include the developer&amp;#39;s normal fixed overhead costs such as office rent, the cost of commuting, or the wear and tear on equipment. They also do not include materials the client provides the developer to do their work.&amp;nbsp;</p>
" style="display: inline"></i><!-- end ngIf: field.hasHelpText() -->
</div></span></h3></div>
<div alternate-selection-display="" data-field-name="developer's costs" labels="labels" options="options" field="field" fields="fields" value-index="undefined" class="ng-scope ng-isolate-scope"><div class="online-form-optional-clause nolo_field" data-field-name="developer's costs" ng-click="setActiveField(field.name, $event, valueIndex);  $event.stopPropagation();" value-index="0">
    <h4 class="questionText ng-binding" ng-bind-html="(getInterviewText()) | html"></h4>
    <h5><span class="chooseText">Choose one<!-- ngIf: valueIndex -->:</span> <!-- ngIf: field.hasHelpText() --><i class="icon-question-sign has-help-popover ng-scope" rel="popover" ng-click="showHelpPopover($event)" ng-if="field.hasHelpText()" data-content="<p>
    Whether or not the developer is reimbursed for expenses and the extent of such reimbursement is a matter for negotiation.</p>
" style="display: inline"></i><!-- end ngIf: field.hasHelpText() --></h5>
    <table class="alternateSelectionTable">
        <tbody>
            <!-- ngRepeat: option in options track by $index --><tr ng-repeat="option in options track by $index" ng-class="getClass($index)" ng-click="selectOption($index, valueIndex, $event)" class="ng-scope unselectedClause">
                <td class="optional-clause-answer optionSelection" width="20">
                    <div ng-class="getCheckboxClass($index)" class="ng-binding">
                        <input type="radio" ng-model="field.value[valueIndex]" value="full reimbursement" ng-checked="isSelected($index)" ng-disabled="$parent.$parent.isReadOnly()" class="ng-pristine ng-untouched ng-valid" name="398"> 
                    </div>
                </td>
                <td class="optional-clause-index optionSelection" width="20"><span class="optionIndex ng-binding">A:</span></td>
                <td class="optional-clause alternateSelectionOption"><div compile-html="option"><div class="ng-scope">
                <p>
                    Client shall reimburse Developer for all out-of-pocket expenses incurred by Developer in performing services under this Agreement. Such expenses include, but are not limited, to<div style="display: inline;display: inline" class="nolo-help ng-isolate-scope" data-field-help-text="<p>
    The first alternative calls for payment of all the developer&amp;#39;s out-of-pocket expenses.</p>" data-field-required="false" data-field-type="help" disabled="disabled" field="fields.get('full reimbursement, help')" name="full reimbursement, help" src="/ckeditor/plugins/nolohelp/images/help.png" type="text" value="full reimbursement, help">
    <!-- ngIf: field.hasHelpText() --><i class="icon-question-sign has-help-popover ng-scope" rel="popover" ng-click="showHelpPopover($event)" ng-if="field.hasHelpText()" data-content="<p>
    The first alternative calls for payment of all the developer&amp;#39;s out-of-pocket expenses.</p>
" style="display: inline"></i><!-- end ngIf: field.hasHelpText() -->
</div></p>
                <p>
                    (a) all communications charges;</p>
                <p>
                    (b) travel expenses other than normal commuting, including airfares, rental vehicles, and highway mileage in company or personal vehicles at&nbsp;<span class="nolo_field inline-editor question-box-edit-dialog ng-scope ng-isolate-scope" data-field-name="mileage rate" nolo-question-box-edit-dialog="" field="field" value-index="undefined">
    <span class="inline-field-value inlineFormElement ng-binding" ng-click="setActiveField(field.name, $event, valueIndex); $event.stopPropagation();" ng-bind-html="(field.displayValue(false, valueIndex)) | html">mileage rate</span>
    <!-- ngIf: field.hasHelpText() -->
</span>&nbsp;cents per mile; and</p>
                <p>
                    (c) other expenses resulting from the work performed under this Agreement.</p>
                <p>
                    Developer shall submit an itemized statement of Developer's expenses. Client shall pay Developer within 30 days from the date of each statement.</p>
            </div></div></td>
            </tr><!-- end ngRepeat: option in options track by $index --><tr ng-repeat="option in options track by $index" ng-class="getClass($index)" ng-click="selectOption($index, valueIndex, $event)" class="ng-scope unselectedClause">
                <td class="optional-clause-answer optionSelection" width="20">
                    <div ng-class="getCheckboxClass($index)" class="ng-binding">
                        <input type="radio" ng-model="field.value[valueIndex]" value="developer pays expenses" ng-checked="isSelected($index)" ng-disabled="$parent.$parent.isReadOnly()" class="ng-pristine ng-untouched ng-valid" name="400"> 
                    </div>
                </td>
                <td class="optional-clause-index optionSelection" width="20"><span class="optionIndex ng-binding">B:</span></td>
                <td class="optional-clause alternateSelectionOption"><div compile-html="option"><div class="ng-scope">
                <p>
                    Developer shall be responsible for all expenses incurred while performing services under this Agreement.<div style="display: inline;display: inline" class="nolo-help ng-isolate-scope" data-field-help-text="<p>
    Setting the developer&amp;#39;s compensation at a level high enough to cover its expenses is simplest. On the practical side, it frees the developer from having to keep records of expenses. However, if a project will involve expensive traveling, it may make sense for the developer to separately bill the client for the cost.</p>" data-field-required="false" data-field-type="help" disabled="disabled" field="fields.get('developer pays expenses, help')" name="developer pays expenses, help" src="/ckeditor/plugins/nolohelp/images/help.png" type="text" value="developer pays expenses, help">
    <!-- ngIf: field.hasHelpText() --><i class="icon-question-sign has-help-popover ng-scope" rel="popover" ng-click="showHelpPopover($event)" ng-if="field.hasHelpText()" data-content="<p>
    Setting the developer&amp;#39;s compensation at a level high enough to cover its expenses is simplest. On the practical side, it frees the developer from having to keep records of expenses. However, if a project will involve expensive traveling, it may make sense for the developer to separately bill the client for the cost.</p>
" style="display: inline"></i><!-- end ngIf: field.hasHelpText() -->
</div></p>
            </div></div></td>
            </tr><!-- end ngRepeat: option in options track by $index -->
        </tbody>
    </table>
</div></div>
<div multiple-selection-display="" data-field-name="late fees option" options="options" field="field" fields="fields" value-index="undefined" class="ng-scope ng-isolate-scope"><div class="online-form-optional-clause nolo_field" data-field-name="late fees option" ng-click="setActiveField(field.name, $event, valueIndex); $event.stopPropagation();" value-index="0">
    <h4 class="questionText ng-binding" ng-bind-html="(getInterviewText()) | html"></h4>
    <h5><span class="chooseText ng-binding">Optional Clause:</span> <!-- ngIf: field.hasHelpText() --></h5>
    <table class="multipleSelectionTable">
        <tbody>
            <!-- ngRepeat: option in options --><tr ng-repeat="option in options" ng-class="getClass($index)" ng-click="selectOption($index, valueIndex, $event)" class="ng-scope unselectedClause">
                <td class="optional-clause-answer optionSelection" width="20"><div ng-class="getCheckboxClass($index)"><input type="checkbox" value="0" ng-checked="field.isSelected($index, valueIndex)" ng-disabled="$parent.$parent.isReadOnly()"></div></td>
                <td class="optional-clause-index optionSelection" width="20"><span class="optionIndex ng-binding"></span></td>
                <td class="optional-clause multipleSelectionOption"><div compile-html="option"><div class="ng-scope">
                <div id="clause-5-wrapper" class="clauseWrapper"><h3 class="clauseHeader" id="clause5"><span class="ng-binding ng-scope">6. </span><span class="ng-scope">
                    Late Fees<div style="color: rgb(34, 34, 34); font-family: Arial, Verdana, sans-serif; font-size: 12px;;display: inline;display: inline;display: inline;display: inline" class="nolo-help ng-isolate-scope" data-field-help-text="<p>
    <span style=&quot;font-size: 12px;&quot;>Many developers charge a late fee if the client doesn&amp;#39;t pay within the time specified in the development agreement or invoice. Charging late fees for overdue payments can help clients to pay on time. The late fee is normally expressed as a monthly interest charge -- for example, 1% per month.</span></p>" data-field-required="false" data-field-type="help" disabled="disabled" field="fields.get('late fees, help')" name="late fees, help" src="/ckeditor/plugins/nolohelp/images/help.png" type="text" value="late fees, help">
    <!-- ngIf: field.hasHelpText() --><i class="icon-question-sign has-help-popover ng-scope" rel="popover" ng-click="showHelpPopover($event)" ng-if="field.hasHelpText()" data-content="<p>
    <span style=&quot;font-size: 12px;&quot;>Many developers charge a late fee if the client doesn&amp;#39;t pay within the time specified in the development agreement or invoice. Charging late fees for overdue payments can help clients to pay on time. The late fee is normally expressed as a monthly interest charge -- for example, 1% per month.</span></p>
" style="display: inline"></i><!-- end ngIf: field.hasHelpText() -->
</div></span></h3></div>
                <div alternate-selection-display="" data-field-name="late fees, type" labels="labels" options="options" field="field" fields="fields" value-index="undefined" class="ng-scope ng-isolate-scope"><div class="online-form-optional-clause nolo_field" data-field-name="late fees, type" ng-click="setActiveField(field.name, $event, valueIndex);  $event.stopPropagation();" value-index="0">
    <h4 class="questionText ng-binding" ng-bind-html="(getInterviewText()) | html"></h4>
    <h5><span class="chooseText">Choose one<!-- ngIf: valueIndex -->:</span> <!-- ngIf: field.hasHelpText() --></h5>
    <table class="alternateSelectionTable">
        <tbody>
            <!-- ngRepeat: option in options track by $index --><tr ng-repeat="option in options track by $index" ng-class="getClass($index)" ng-click="selectOption($index, valueIndex, $event)" class="ng-scope unselectedClause">
                <td class="optional-clause-answer optionSelection" width="20">
                    <div ng-class="getCheckboxClass($index)" class="ng-binding">
                        <input type="radio" ng-model="field.value[valueIndex]" value="monthly interest" ng-checked="isSelected($index)" ng-disabled="$parent.$parent.isReadOnly()" class="ng-pristine ng-untouched ng-valid" name="421"> 
                    </div>
                </td>
                <td class="optional-clause-index optionSelection" width="20"><span class="optionIndex ng-binding">A:</span></td>
                <td class="optional-clause alternateSelectionOption"><div compile-html="option"><div class="ng-scope">
                                <p>
                                    Late payments by Client shall be subject to late penalty fees of&nbsp;<span class="nolo_field inline-editor question-box-edit-dialog ng-scope ng-isolate-scope" data-field-name="late fee percentage" nolo-question-box-edit-dialog="" field="field" value-index="undefined">
    <span class="inline-field-value inlineFormElement ng-binding" ng-click="setActiveField(field.name, $event, valueIndex); $event.stopPropagation();" ng-bind-html="(field.displayValue(false, valueIndex)) | html">late fee percentage</span>
    <!-- ngIf: field.hasHelpText() -->
</span>%&nbsp;per month or the maximum allowed under state law from the due date until the amount is paid.</p>
                            </div></div></td>
            </tr><!-- end ngRepeat: option in options track by $index --><tr ng-repeat="option in options track by $index" ng-class="getClass($index)" ng-click="selectOption($index, valueIndex, $event)" class="ng-scope unselectedClause">
                <td class="optional-clause-answer optionSelection" width="20">
                    <div ng-class="getCheckboxClass($index)" class="ng-binding">
                        <input type="radio" ng-model="field.value[valueIndex]" value="other late fee" ng-checked="isSelected($index)" ng-disabled="$parent.$parent.isReadOnly()" class="ng-pristine ng-untouched ng-valid" name="423"> 
                    </div>
                </td>
                <td class="optional-clause-index optionSelection" width="20"><span class="optionIndex ng-binding">B:</span></td>
                <td class="optional-clause alternateSelectionOption"><div compile-html="option"><div class="ng-scope">
                                <p>
                                    <span class="nolo_field inline-editor question-box-edit-dialog ng-scope ng-isolate-scope" data-field-name="other late fee" nolo-question-box-edit-dialog="" field="field" value-index="undefined">
    <span class="inline-field-value inlineFormElement ng-binding" ng-click="setActiveField(field.name, $event, valueIndex); $event.stopPropagation();" ng-bind-html="(field.displayValue(false, valueIndex)) | html">other late fee</span>
    <!-- ngIf: field.hasHelpText() -->
</span></p>
                            </div></div></td>
            </tr><!-- end ngRepeat: option in options track by $index -->
        </tbody>
    </table>
</div></div>
            </div></div></td>
            </tr><!-- end ngRepeat: option in options -->
        </tbody>
    </table>
</div></div>
<div multiple-selection-display="" data-field-name="materials" options="options" field="field" fields="fields" value-index="undefined" class="ng-scope ng-isolate-scope"><div class="online-form-optional-clause nolo_field" data-field-name="materials" ng-click="setActiveField(field.name, $event, valueIndex); $event.stopPropagation();" value-index="0">
    <h4 class="questionText ng-binding" ng-bind-html="(getInterviewText()) | html"></h4>
    <h5><span class="chooseText ng-binding">Optional Clause:</span> <!-- ngIf: field.hasHelpText() --><i class="icon-question-sign has-help-popover ng-scope" rel="popover" ng-click="showHelpPopover($event)" ng-if="field.hasHelpText()" data-content="<p>
    If the client will provide the developer with any materials, facilities, or equipment, list them in this optional clause.</p>
" style="display: inline"></i><!-- end ngIf: field.hasHelpText() --></h5>
    <table class="multipleSelectionTable">
        <tbody>
            <!-- ngRepeat: option in options --><tr ng-repeat="option in options" ng-class="getClass($index)" ng-click="selectOption($index, valueIndex, $event)" class="ng-scope unselectedClause">
                <td class="optional-clause-answer optionSelection" width="20"><div ng-class="getCheckboxClass($index)"><input type="checkbox" value="0" ng-checked="field.isSelected($index, valueIndex)" ng-disabled="$parent.$parent.isReadOnly()"></div></td>
                <td class="optional-clause-index optionSelection" width="20"><span class="optionIndex ng-binding"></span></td>
                <td class="optional-clause multipleSelectionOption"><div compile-html="option"><div class="ng-scope">
                <div id="clause-6-wrapper" class="clauseWrapper"><h3 class="clauseHeader" id="clause6"><span class="ng-binding ng-scope">7. </span><span class="ng-scope">
                    Materials</span></h3></div>
                <p>
                    Client shall make available to Developer, at Client's expense, the following materials, facilities, and equipment:&nbsp;<span class="nolo_field inline-editor question-box-edit-dialog ng-scope ng-isolate-scope" data-field-name="materials list" nolo-question-box-edit-dialog="" field="field" value-index="undefined">
    <span class="inline-field-value inlineFormElement ng-binding" ng-click="setActiveField(field.name, $event, valueIndex); $event.stopPropagation();" ng-bind-html="(field.displayValue(false, valueIndex)) | html">materials list</span>
    <!-- ngIf: field.hasHelpText() -->
</span>.&nbsp; These items will be provided to Developer by&nbsp;<span class="nolo_field inline-editor question-box-edit-dialog ng-scope ng-isolate-scope" data-field-name="materials date" nolo-question-box-edit-dialog="" field="field" value-index="undefined">
    <span class="inline-field-value inlineFormElement ng-binding" ng-click="setActiveField(field.name, $event, valueIndex); $event.stopPropagation();" ng-bind-html="(field.displayValue(false, valueIndex)) | html">materials date</span>
    <!-- ngIf: field.hasHelpText() -->
</span>. If the materials are not available as of the date specified, Developer's obligations and due dates shall be extended by the number of days of the delay.</p>
            </div></div></td>
            </tr><!-- end ngRepeat: option in options -->
        </tbody>
    </table>
</div></div>
<div id="clause-7-wrapper" class="clauseWrapper"><h3 class="clauseHeader" id="clause7"><span class="ng-binding ng-scope">8. </span><span class="ng-scope">
    Changes in Project Scope<div style="color: rgb(34, 34, 34); font-family: Arial, Verdana, sans-serif; font-size: 12px;;display: inline;display: inline;display: inline;display: inline" class="nolo-help ng-isolate-scope" data-field-help-text="<p>
    <span style=&quot;font-size: 12px;&quot;>It&amp;#39;s quite common in the course of website development for the client to wish to make changes -- adding new features and/or deleting others. However, in other instances, the developer, not the client, will wish to alter the specifications.</span></p>
<p>
    All such changes should be in writing and signed by both parties as required by the clause dealing with modifications to the agreement. (See the section &amp;quot;General Provisions&amp;quot; at the end of the agreement.)&amp;nbsp;</p>" data-field-required="false" data-field-type="help" disabled="disabled" field="fields.get('changes in project scope, help')" name="changes in project scope, help" src="/ckeditor/plugins/nolohelp/images/help.png" type="text" value="changes in project scope, help">
    <!-- ngIf: field.hasHelpText() --><i class="icon-question-sign has-help-popover ng-scope" rel="popover" ng-click="showHelpPopover($event)" ng-if="field.hasHelpText()" data-content="<p>
    <span style=&quot;font-size: 12px;&quot;>It&amp;#39;s quite common in the course of website development for the client to wish to make changes -- adding new features and/or deleting others. However, in other instances, the developer, not the client, will wish to alter the specifications.</span></p>
<p>
    All such changes should be in writing and signed by both parties as required by the clause dealing with modifications to the agreement. (See the section &amp;quot;General Provisions&amp;quot; at the end of the agreement.)&amp;nbsp;</p>
" style="display: inline"></i><!-- end ngIf: field.hasHelpText() -->
</div></span></h3></div>
<p>
    If Client wishes to implement major revisions after Client has already accepted Developer's work product following completion of any stage of development, Client shall submit to Developer a written proposal specifying the desired changes.</p>
<p>
    Developer will evaluate each such proposal at its standard rates and charges. Developer shall submit to Client a written response to each such proposal within ten working days following receipt. Developer's written response shall include a statement of the availability of Developer's personnel and resources, as well as any impact the proposed changes will have on the contract price, delivery dates, or warranty provisions of this Agreement.</p>
<p>
    Client shall have ten business days from receipt of Developer's response to its proposal to accept or reject it in writing. If Client accepts Developer's response, Developer shall draft a written Contract Amendment Agreement to reflect the desired changes and acknowledge any effect of such changes on the provisions of this Agreement. Developer shall commence work on the desired changes once the Contract Amendment Agreement is signed by authorized representatives of Client and Developer.</p>
<p>
    Should Client reject Developer's response to its proposal, Client will so notify Developer within ten working days of Client's receipt of the response. Developer will not be obligated to perform any services beyond those called for in this original Agreement.</p>
<div id="clause-8-wrapper" class="clauseWrapper"><h3 class="clauseHeader" id="clause8"><span class="ng-binding ng-scope">9. </span><span class="ng-scope">
    Delays<div style="color: rgb(34, 34, 34); font-family: Arial, Verdana, sans-serif; font-size: 12px;;display: inline;display: inline;display: inline;display: inline" class="nolo-help ng-isolate-scope" data-field-help-text="<p>
    Creation of new websites will often take longer than originally anticipated. There are many reasons for this. Estimating how long it will take to create a new website is an uncertain art at best. Delays may also result if the developer has staffing changes or increased demands on existing staff. A deadline can be extended by the developer by giving written notice to the client.&amp;nbsp;However, a cap is placed on the total days of extensions. Decide how many days this cap should be and insert that number into the blank.</p>" data-field-required="false" data-field-type="help" disabled="disabled" field="fields.get('delays, help')" name="delays, help" src="/ckeditor/plugins/nolohelp/images/help.png" type="text" value="delays, help">
    <!-- ngIf: field.hasHelpText() --><i class="icon-question-sign has-help-popover ng-scope" rel="popover" ng-click="showHelpPopover($event)" ng-if="field.hasHelpText()" data-content="<p>
    Creation of new websites will often take longer than originally anticipated. There are many reasons for this. Estimating how long it will take to create a new website is an uncertain art at best. Delays may also result if the developer has staffing changes or increased demands on existing staff. A deadline can be extended by the developer by giving written notice to the client.&amp;nbsp;However, a cap is placed on the total days of extensions. Decide how many days this cap should be and insert that number into the blank.</p>
" style="display: inline"></i><!-- end ngIf: field.hasHelpText() -->
</div></span></h3></div>
<p>
    Developer shall use all reasonable efforts to meet the delivery schedule set. However, at its option, Developer can extend the due date for any deliverable by giving written notice to Client. The total of all such extensions shall not exceed&nbsp;<span class="nolo_field inline-editor question-box-edit-dialog ng-scope ng-isolate-scope" data-field-name="extension cap" nolo-question-box-edit-dialog="" field="field" value-index="undefined">
    <span class="inline-field-value inlineFormElement ng-binding" ng-click="setActiveField(field.name, $event, valueIndex); $event.stopPropagation();" ng-bind-html="(field.displayValue(false, valueIndex)) | html">extension cap</span>
    <!-- ngIf: field.hasHelpText() -->
</span>&nbsp;days.</p>
<p>
    Any delay or nonperformance of any provision of this Agreement caused by conditions beyond the reasonable control of the performing party shall not constitute a breach of this Agreement, provided that the delayed party has taken reasonable measures to notify the other of the delay in writing. The delayed party's time for performance shall be deemed to be extended for a period equal to the duration of the conditions beyond its control.</p>
<p>
    Conditions beyond a party's reasonable control include, but are not limited to, natural disasters, acts of government after the date of the Agreement, power failure, fire, flood, acts of God, labor disputes, riots, acts of war or terrorism, and epidemics. Failure of subcontractors and inability to obtain materials shall not be considered a condition beyond a party's reasonable control.</p>
<div id="clause-9-wrapper" class="clauseWrapper"><h3 class="clauseHeader" id="clause9"><span class="ng-binding ng-scope">10. </span><span class="ng-scope">
    Ownership of Developer Content<div style="color: rgb(34, 34, 34); font-family: Arial, Verdana, sans-serif; font-size: 12px;;display: inline;display: inline;display: inline;display: inline" class="nolo-help ng-isolate-scope" data-field-help-text="<p>
    Many website developers and clients harbor the misapprehension that, since the developer is being paid to create the site by the client, the client will automatically own all rights to it. This is not the case. Absent a written contract transferring ownership from the developer to the client, the developer will most likely own the copyright in anything it creates for the client (unless the developer is considered the client&amp;#39;s employee). One of the most important functions of a website development agreement is to establish exactly who will own the intellectual property rights to content to be created. This is often one of the most contested issues between the developer and client.</p>" data-field-required="false" data-field-type="help" disabled="disabled" field="fields.get('developer content ownership, help')" name="developer content ownership, help" src="/ckeditor/plugins/nolohelp/images/help.png" type="text" value="developer content ownership, help">
    <!-- ngIf: field.hasHelpText() --><i class="icon-question-sign has-help-popover ng-scope" rel="popover" ng-click="showHelpPopover($event)" ng-if="field.hasHelpText()" data-content="<p>
    Many website developers and clients harbor the misapprehension that, since the developer is being paid to create the site by the client, the client will automatically own all rights to it. This is not the case. Absent a written contract transferring ownership from the developer to the client, the developer will most likely own the copyright in anything it creates for the client (unless the developer is considered the client&amp;#39;s employee). One of the most important functions of a website development agreement is to establish exactly who will own the intellectual property rights to content to be created. This is often one of the most contested issues between the developer and client.</p>
" style="display: inline"></i><!-- end ngIf: field.hasHelpText() -->
</div></span></h3></div>
<div multiple-selection-display="" data-field-name="developer content ownership" options="options" field="field" fields="fields" value-index="undefined" class="ng-scope ng-isolate-scope"><div class="online-form-optional-clause nolo_field" data-field-name="developer content ownership" ng-click="setActiveField(field.name, $event, valueIndex); $event.stopPropagation();" value-index="0">
    <h4 class="questionText ng-binding" ng-bind-html="(getInterviewText()) | html"></h4>
    <h5><span class="chooseText ng-binding">Choose any that apply:</span> <!-- ngIf: field.hasHelpText() --></h5>
    <table class="multipleSelectionTable">
        <tbody>
            <!-- ngRepeat: option in options --><tr ng-repeat="option in options" ng-class="getClass($index)" ng-click="selectOption($index, valueIndex, $event)" class="ng-scope unselectedClause">
                <td class="optional-clause-answer optionSelection" width="20"><div ng-class="getCheckboxClass($index)"><input type="checkbox" value="0" ng-checked="field.isSelected($index, valueIndex)" ng-disabled="$parent.$parent.isReadOnly()"></div></td>
                <td class="optional-clause-index optionSelection" width="20"><span class="optionIndex ng-binding">A:</span></td>
                <td class="optional-clause multipleSelectionOption"><div compile-html="option"><div class="ng-scope">
                <p>
                    Developer assigns to Client all right, title, and interest in the copyrights in Developer Content, including copyright in the Site's compilation or collective work and in the derivative copyrights of such works. Developer will sign any further documents reasonably requested by Client to put into effect the assignment of these rights.<div style="display: inline;display: inline" class="nolo-help ng-isolate-scope" data-field-help-text="<p>
    <span style=&quot;font-size: 12px;&quot;>Choose this option to grant all ownership rights in the Developer Content to the client, with no restrictions. Some clients insist on receiving sole ownership because they are paying the developer to create the website.</span></p>" data-field-required="false" data-field-type="help" disabled="disabled" field="fields.get('ownership by client, help')" name="ownership by client, help" src="/ckeditor/plugins/nolohelp/images/help.png" type="text" value="ownership by client, help">
    <!-- ngIf: field.hasHelpText() --><i class="icon-question-sign has-help-popover ng-scope" rel="popover" ng-click="showHelpPopover($event)" ng-if="field.hasHelpText()" data-content="<p>
    <span style=&quot;font-size: 12px;&quot;>Choose this option to grant all ownership rights in the Developer Content to the client, with no restrictions. Some clients insist on receiving sole ownership because they are paying the developer to create the website.</span></p>
" style="display: inline"></i><!-- end ngIf: field.hasHelpText() -->
</div></p>
            </div></div></td>
            </tr><!-- end ngRepeat: option in options --><tr ng-repeat="option in options" ng-class="getClass($index)" ng-click="selectOption($index, valueIndex, $event)" class="ng-scope unselectedClause">
                <td class="optional-clause-answer optionSelection" width="20"><div ng-class="getCheckboxClass($index)"><input type="checkbox" value="1" ng-checked="field.isSelected($index, valueIndex)" ng-disabled="$parent.$parent.isReadOnly()"></div></td>
                <td class="optional-clause-index optionSelection" width="20"><span class="optionIndex ng-binding">B:</span></td>
                <td class="optional-clause multipleSelectionOption"><div compile-html="option"><div class="ng-scope">
                <p>
                    Developer shall retain all copyright, patent, trade secret, and other intellectual property rights Developer may have in Developer Content. Subject to payment of all compensation due under this Agreement, Developer grants Client a perpetual, nonexclusive, nontransferable, royalty-free license to use Developer Content. This license shall authorize Client to:</p>
                <ul>
                    <li>
                        Operate the Site on its host server;</li>
                </ul>
                <ul>
                    <li>
                        update, revise, or republish the Site; and</li>
                </ul>
                <ul>
                    <li>
                        advertise and promote the Site.<div style="display: inline;display: inline" class="nolo-help ng-isolate-scope" data-field-help-text="<p>
    Choose this option if you wish to retain ownership of all the Developer Content and give the client only a nonexclusive license to use it. This means that you are free to license the content to anyone else, including the client&amp;#39;s competitors. This is the most favorable ownership arrangement for the developer.</p>" data-field-required="false" data-field-type="help" disabled="disabled" field="fields.get('ownership by developer, help')" name="ownership by developer, help" src="/ckeditor/plugins/nolohelp/images/help.png" type="text" value="ownership by developer, help">
    <!-- ngIf: field.hasHelpText() --><i class="icon-question-sign has-help-popover ng-scope" rel="popover" ng-click="showHelpPopover($event)" ng-if="field.hasHelpText()" data-content="<p>
    Choose this option if you wish to retain ownership of all the Developer Content and give the client only a nonexclusive license to use it. This means that you are free to license the content to anyone else, including the client&amp;#39;s competitors. This is the most favorable ownership arrangement for the developer.</p>
" style="display: inline"></i><!-- end ngIf: field.hasHelpText() -->
</div></li>
                </ul>
            </div></div></td>
            </tr><!-- end ngRepeat: option in options -->
        </tbody>
    </table>
</div></div>
<div id="clause-10-wrapper" class="clauseWrapper"><h3 class="clauseHeader" id="clause10"><span class="ng-binding ng-scope">11. </span><span class="ng-scope">
    Ownership of Developer Tools<div style="color: rgb(34, 34, 34); font-family: Arial, Verdana, sans-serif; font-size: 12px;;display: inline;display: inline;display: inline;display: inline" class="nolo-help ng-isolate-scope" data-field-help-text="<p>
    <span style=&quot;font-size: 12px;&quot;>A website developer will normally bring to the project various development tools, programs, subroutines, and other programs, data, and materials. It&amp;#39;s quite possible that Developer Tools may end up in the final product. If the developer transfers complete ownership of the website to the client, the client also may end up owning Developer Tools. Such an arrangement would prohibit the developer from using these materials in other projects without obtaining the client&amp;#39;s permission (and perhaps paying a fee).</span></p>
<p>
    This provision permits the client to use the developer tools to operate and update the site, but keeps ownership in the developer&amp;#39;s hands. The developer should prepare a separate exhibit that identifies the developer tools in as much detail as possible.&amp;nbsp;</p>" data-field-required="false" data-field-type="help" disabled="disabled" field="fields.get('developer tools ownership, help')" name="developer tools ownership, help" src="/ckeditor/plugins/nolohelp/images/help.png" type="text" value="developer tools ownership, help">
    <!-- ngIf: field.hasHelpText() --><i class="icon-question-sign has-help-popover ng-scope" rel="popover" ng-click="showHelpPopover($event)" ng-if="field.hasHelpText()" data-content="<p>
    <span style=&quot;font-size: 12px;&quot;>A website developer will normally bring to the project various development tools, programs, subroutines, and other programs, data, and materials. It&amp;#39;s quite possible that Developer Tools may end up in the final product. If the developer transfers complete ownership of the website to the client, the client also may end up owning Developer Tools. Such an arrangement would prohibit the developer from using these materials in other projects without obtaining the client&amp;#39;s permission (and perhaps paying a fee).</span></p>
<p>
    This provision permits the client to use the developer tools to operate and update the site, but keeps ownership in the developer&amp;#39;s hands. The developer should prepare a separate exhibit that identifies the developer tools in as much detail as possible.&amp;nbsp;</p>
" style="display: inline"></i><!-- end ngIf: field.hasHelpText() -->
</div></span></h3></div>
<p>
    Client acknowledges that Developer owns or holds a license to use and sublicense various development or authoring tools it uses to create websites for its clients. By way of example, such tools may include, but are not limited to, such items as: HTML code, Java code, Java applets, subroutines, search engines, and toolbars for maneuvering between pages. Such material shall be referred to as "Developer's Tools."</p>
<p>
    Developer Tools include, but are not limited to, the following:&nbsp;<span class="nolo_field inline-editor question-box-edit-dialog ng-scope ng-isolate-scope" data-field-name="developer tools" nolo-question-box-edit-dialog="" field="field" value-index="undefined">
    <span class="inline-field-value inlineFormElement ng-binding" ng-click="setActiveField(field.name, $event, valueIndex); $event.stopPropagation();" ng-bind-html="(field.displayValue(false, valueIndex)) | html">developer tools</span>
    <!-- ngIf: field.hasHelpText() -->
</span>.</p>
<p>
    Developer retains all right, title, and interest, including all copyright, patent rights and trade secret rights in Developer Tools. Subject to full payment of the fees due under this Agreement, Developer grants Client a nonexclusive, perpetual, worldwide license to use the Developer Tools to operate the Site and for all updates and revisions thereto. However, Client shall make no other commercial use of Developer Tools without Developer's written consent.</p>
<div id="clause-11-wrapper" class="clauseWrapper"><h3 class="clauseHeader" id="clause11"><span class="ng-binding ng-scope">12. </span><span class="ng-scope">
    Website Credits and Links<div style="color: rgb(34, 34, 34); font-family: Arial, Verdana, sans-serif; font-size: 12px;;display: inline;display: inline;display: inline;display: inline" class="nolo-help ng-isolate-scope" data-field-help-text="<p>
    Most website developers get some form of credit on the completed site.</p>" data-field-required="false" data-field-type="help" disabled="disabled" field="fields.get('website credits and links, help')" name="website credits and links, help" src="/ckeditor/plugins/nolohelp/images/help.png" type="text" value="website credits and links, help">
    <!-- ngIf: field.hasHelpText() --><i class="icon-question-sign has-help-popover ng-scope" rel="popover" ng-click="showHelpPopover($event)" ng-if="field.hasHelpText()" data-content="<p>
    Most website developers get some form of credit on the completed site.</p>
" style="display: inline"></i><!-- end ngIf: field.hasHelpText() -->
</div></span></h3></div>
<p>
    Developer may take the following actions:&nbsp;</p>
<div multiple-selection-display="" data-field-name="website credits and links" options="options" field="field" fields="fields" value-index="undefined" class="ng-scope ng-isolate-scope"><div class="online-form-optional-clause nolo_field" data-field-name="website credits and links" ng-click="setActiveField(field.name, $event, valueIndex); $event.stopPropagation();" value-index="0">
    <h4 class="questionText ng-binding" ng-bind-html="(getInterviewText()) | html"></h4>
    <h5><span class="chooseText ng-binding">Choose any that apply:</span> <!-- ngIf: field.hasHelpText() --></h5>
    <table class="multipleSelectionTable">
        <tbody>
            <!-- ngRepeat: option in options --><tr ng-repeat="option in options" ng-class="getClass($index)" ng-click="selectOption($index, valueIndex, $event)" class="ng-scope unselectedClause">
                <td class="optional-clause-answer optionSelection" width="20"><div ng-class="getCheckboxClass($index)"><input type="checkbox" value="0" ng-checked="field.isSelected($index, valueIndex)" ng-disabled="$parent.$parent.isReadOnly()"></div></td>
                <td class="optional-clause-index optionSelection" width="20"><span class="optionIndex ng-binding">A:</span></td>
                <td class="optional-clause multipleSelectionOption"><div compile-html="option"><div class="ng-scope">
                <p>
                    Developer can state on the Site that Developer developed the Site.</p>
            </div></div></td>
            </tr><!-- end ngRepeat: option in options --><tr ng-repeat="option in options" ng-class="getClass($index)" ng-click="selectOption($index, valueIndex, $event)" class="ng-scope unselectedClause">
                <td class="optional-clause-answer optionSelection" width="20"><div ng-class="getCheckboxClass($index)"><input type="checkbox" value="1" ng-checked="field.isSelected($index, valueIndex)" ng-disabled="$parent.$parent.isReadOnly()"></div></td>
                <td class="optional-clause-index optionSelection" width="20"><span class="optionIndex ng-binding">B:</span></td>
                <td class="optional-clause multipleSelectionOption"><div compile-html="option"><div class="ng-scope">
                <p>
                    Developer can place hypertext links on Client's Site to Developer's website.</p>
            </div></div></td>
            </tr><!-- end ngRepeat: option in options --><tr ng-repeat="option in options" ng-class="getClass($index)" ng-click="selectOption($index, valueIndex, $event)" class="ng-scope unselectedClause">
                <td class="optional-clause-answer optionSelection" width="20"><div ng-class="getCheckboxClass($index)"><input type="checkbox" value="2" ng-checked="field.isSelected($index, valueIndex)" ng-disabled="$parent.$parent.isReadOnly()"></div></td>
                <td class="optional-clause-index optionSelection" width="20"><span class="optionIndex ng-binding">C:</span></td>
                <td class="optional-clause multipleSelectionOption"><div compile-html="option"><div class="ng-scope">
                <p>
                    Developer can place hypertext links on Developer's website to Client's Site as an example of Developer's services.</p>
            </div></div></td>
            </tr><!-- end ngRepeat: option in options -->
        </tbody>
    </table>
</div></div>
<div id="clause-12-wrapper" class="clauseWrapper"><h3 class="clauseHeader" id="clause12"><span class="ng-binding ng-scope">13. </span><span class="ng-scope">
    Site Hosting<div style="color: rgb(34, 34, 34); font-family: Arial, Verdana, sans-serif; font-size: 12px;;display: inline;display: inline;display: inline;display: inline" class="nolo-help ng-isolate-scope" data-field-help-text="<p>
    This clause provides that the client will find its own ISP to host the completed website. It also states that the developer will host the site on its own Web space while it&amp;#39;s being developed.&amp;nbsp;If the site is not completed by the date provided in the agreement -- and the delay is the client&amp;#39;s -- the client will pay the developer each month for hosting the site until it&amp;#39;s completed and moved to the client&amp;#39;s chosen ISP.&amp;nbsp;</p>" data-field-required="false" data-field-type="help" disabled="disabled" field="fields.get('site hosting, help')" name="site hosting, help" src="/ckeditor/plugins/nolohelp/images/help.png" type="text" value="site hosting, help">
    <!-- ngIf: field.hasHelpText() --><i class="icon-question-sign has-help-popover ng-scope" rel="popover" ng-click="showHelpPopover($event)" ng-if="field.hasHelpText()" data-content="<p>
    This clause provides that the client will find its own ISP to host the completed website. It also states that the developer will host the site on its own Web space while it&amp;#39;s being developed.&amp;nbsp;If the site is not completed by the date provided in the agreement -- and the delay is the client&amp;#39;s -- the client will pay the developer each month for hosting the site until it&amp;#39;s completed and moved to the client&amp;#39;s chosen ISP.&amp;nbsp;</p>
" style="display: inline"></i><!-- end ngIf: field.hasHelpText() -->
</div></span></h3></div>
<p>
    Client has selected an Internet service provider to host its completed Site. While the Site is under construction and until final payment is received by Developer, Developer will host the Site pages as they are constructed in a special directory on its Web space at:&nbsp;<span class="nolo_field inline-editor question-box-edit-dialog ng-scope ng-isolate-scope" data-field-name="url" nolo-question-box-edit-dialog="" field="field" value-index="undefined">
    <span class="inline-field-value inlineFormElement ng-binding" ng-click="setActiveField(field.name, $event, valueIndex); $event.stopPropagation();" ng-bind-html="(field.displayValue(false, valueIndex)) | html">url</span>
    <!-- ngIf: field.hasHelpText() -->
</span>. If the Site is not completed by the completion date set forth in this Agreement, and if the cause of the delay is not attributable to Developer, Client agrees to pay Developer $<span class="nolo_field inline-editor question-box-edit-dialog ng-scope ng-isolate-scope" data-field-name="site hosting per month" nolo-question-box-edit-dialog="" field="field" value-index="undefined">
    <span class="inline-field-value inlineFormElement ng-binding" ng-click="setActiveField(field.name, $event, valueIndex); $event.stopPropagation();" ng-bind-html="(field.displayValue(false, valueIndex)) | html">site hosting per month</span>
    <!-- ngIf: field.hasHelpText() -->
</span>&nbsp;per month for hosting the Site on Developer's Web space. Client will continue to pay Developer for hosting the Site at this rate until the Site is installed on Client's own Web space. This monthly rate shall be prorated if the Site is installed on Client's Web space before the end of any monthly period.</p>
<div id="clause-13-wrapper" class="clauseWrapper"><h3 class="clauseHeader" id="clause13"><span class="ng-binding ng-scope">14. </span><span class="ng-scope">
    Domain Name<div style="color: rgb(34, 34, 34); font-family: Arial, Verdana, sans-serif; font-size: 12px;;display: inline;display: inline;display: inline;display: inline" class="nolo-help ng-isolate-scope" data-field-help-text="<p>
    This clause provides that the developer will have no owner&amp;shy;ship or other interest in the site domain name. The optional clause part provides that the developer will help the client register the domain name -- but at the client&amp;#39;s expense.&amp;nbsp;</p>" data-field-required="false" data-field-type="help" disabled="disabled" field="fields.get('domain name, help')" name="domain name, help" src="/ckeditor/plugins/nolohelp/images/help.png" type="text" value="domain name, help">
    <!-- ngIf: field.hasHelpText() --><i class="icon-question-sign has-help-popover ng-scope" rel="popover" ng-click="showHelpPopover($event)" ng-if="field.hasHelpText()" data-content="<p>
    This clause provides that the developer will have no owner&amp;shy;ship or other interest in the site domain name. The optional clause part provides that the developer will help the client register the domain name -- but at the client&amp;#39;s expense.&amp;nbsp;</p>
" style="display: inline"></i><!-- end ngIf: field.hasHelpText() -->
</div></span></h3></div>
<p>
    Developer has no legal or financial interest in the domain name chosen by Client for the site.</p>
<div multiple-selection-display="" data-field-name="domain name option" options="options" field="field" fields="fields" value-index="undefined" class="ng-scope ng-isolate-scope"><div class="online-form-optional-clause nolo_field" data-field-name="domain name option" ng-click="setActiveField(field.name, $event, valueIndex); $event.stopPropagation();" value-index="0">
    <h4 class="questionText ng-binding" ng-bind-html="(getInterviewText()) | html"></h4>
    <h5><span class="chooseText ng-binding">Optional Clause:</span> <!-- ngIf: field.hasHelpText() --></h5>
    <table class="multipleSelectionTable">
        <tbody>
            <!-- ngRepeat: option in options --><tr ng-repeat="option in options" ng-class="getClass($index)" ng-click="selectOption($index, valueIndex, $event)" class="ng-scope unselectedClause">
                <td class="optional-clause-answer optionSelection" width="20"><div ng-class="getCheckboxClass($index)"><input type="checkbox" value="0" ng-checked="field.isSelected($index, valueIndex)" ng-disabled="$parent.$parent.isReadOnly()"></div></td>
                <td class="optional-clause-index optionSelection" width="20"><span class="optionIndex ng-binding"></span></td>
                <td class="optional-clause multipleSelectionOption"><div compile-html="option"><div class="ng-scope">
                <p>
                    If requested by Client, Developer will cooperate with Client in registering the domain name with a domain name registry chosen by Client. Client shall bear all expenses incurred in registering the domain name.</p>
            </div></div></td>
            </tr><!-- end ngRepeat: option in options -->
        </tbody>
    </table>
</div></div>
<div id="clause-14-wrapper" class="clauseWrapper"><h3 class="clauseHeader" id="clause14"><span class="ng-binding ng-scope">15. </span><span class="ng-scope">
    Developer Representations and Warranties<div style="color: rgb(34, 34, 34); font-family: Arial, Verdana, sans-serif; font-size: 12px;;display: inline;display: inline;display: inline;display: inline" class="nolo-help ng-isolate-scope" data-field-help-text="<p>
    Warranties and represen&amp;shy;tations are statements and promises that the developer makes regarding its services. They give the client a legal basis for suit if something goes wrong after the developer&amp;#39;s services are completed. Clients usually expect website developers to warrant their work. However, it&amp;#39;s in the developer&amp;#39;s best interest to provide as few warranties as possible or even no warranties at all. The more promises you make about your services the more grounds the client will have to sue you for breach of warranty if something goes wrong.&amp;nbsp;</p>" data-field-required="false" data-field-type="help" disabled="disabled" field="fields.get('developer representations and warranties, help')" name="developer representations and warranties, help" src="/ckeditor/plugins/nolohelp/images/help.png" type="text" value="developer representations and warranties, help">
    <!-- ngIf: field.hasHelpText() --><i class="icon-question-sign has-help-popover ng-scope" rel="popover" ng-click="showHelpPopover($event)" ng-if="field.hasHelpText()" data-content="<p>
    Warranties and represen&amp;shy;tations are statements and promises that the developer makes regarding its services. They give the client a legal basis for suit if something goes wrong after the developer&amp;#39;s services are completed. Clients usually expect website developers to warrant their work. However, it&amp;#39;s in the developer&amp;#39;s best interest to provide as few warranties as possible or even no warranties at all. The more promises you make about your services the more grounds the client will have to sue you for breach of warranty if something goes wrong.&amp;nbsp;</p>
" style="display: inline"></i><!-- end ngIf: field.hasHelpText() -->
</div></span></h3></div>
<div alternate-selection-dropdown-display="" data-field-name="developer representations and warranties" labels="labels" options="options" field="field" fields="fields" value-index="undefined" class="ng-scope ng-isolate-scope"><div class="online-form-optional-clause nolo_field" data-field-name="developer representations and warranties" ng-click="setActiveField(field.name, $event, valueIndex); $event.stopPropagation();">
    <h4 class="questionText ng-binding" ng-bind-html="(getInterviewText()) | html"></h4>
    <h5><span class="chooseText">Choose one:</span> <!-- ngIf: field.hasHelpText() --></h5>
	    <!-- <select ng-model="selectedDropdownIndex" ng-options="i.id as i.value for i in getLabels()"  ng-disabled="$parent.$parent.isReadOnly()"></select><br> -->
    <select ng-model="selectedDropdownIndex" class="ng-pristine ng-untouched ng-valid"><option value="? string: ?"></option>
		<!-- ngRepeat: item in getLabels --><option ng-repeat="item in getLabels" class="ng-binding ng-scope" value="disclaimer of warranties">disclaimer of warranties</option><!-- end ngRepeat: item in getLabels --><option ng-repeat="item in getLabels" class="ng-binding ng-scope" value="express warranties">express warranties</option><!-- end ngRepeat: item in getLabels -->
	</select><br>
    <table>
        <tbody><!-- ngRepeat: option in options track by $index --><!-- ngIf: isSelected($index, valueIndex) --><!-- end ngRepeat: option in options track by $index --><!-- ngIf: isSelected($index, valueIndex) --><!-- end ngRepeat: option in options track by $index -->
    </tbody></table>
</div></div>
<div id="clause-15-wrapper" class="clauseWrapper"><h3 class="clauseHeader" id="clause15"><span class="ng-binding ng-scope">16. </span><span class="ng-scope">
    Intellectual Property Infringement Claims</span></h3></div>
<div alternate-selection-display="" data-field-name="intellectual property" labels="labels" options="options" field="field" fields="fields" value-index="undefined" class="ng-scope ng-isolate-scope"><div class="online-form-optional-clause nolo_field" data-field-name="intellectual property" ng-click="setActiveField(field.name, $event, valueIndex);  $event.stopPropagation();" value-index="0">
    <h4 class="questionText ng-binding" ng-bind-html="(getInterviewText()) | html"></h4>
    <h5><span class="chooseText">Choose one<!-- ngIf: valueIndex -->:</span> <!-- ngIf: field.hasHelpText() --></h5>
    <table class="alternateSelectionTable">
        <tbody>
            <!-- ngRepeat: option in options track by $index --><tr ng-repeat="option in options track by $index" ng-class="getClass($index)" ng-click="selectOption($index, valueIndex, $event)" class="ng-scope unselectedClause">
                <td class="optional-clause-answer optionSelection" width="20">
                    <div ng-class="getCheckboxClass($index)" class="ng-binding">
                        <input type="radio" ng-model="field.value[valueIndex]" value="limited warranty against infringement" ng-checked="isSelected($index)" ng-disabled="$parent.$parent.isReadOnly()" class="ng-pristine ng-untouched ng-valid" name="500"> 
                    </div>
                </td>
                <td class="optional-clause-index optionSelection" width="20"><span class="optionIndex ng-binding">A:</span></td>
                <td class="optional-clause alternateSelectionOption"><div compile-html="option"><div class="ng-scope">
                <p>
                    Developer warrants that Developer will not knowingly infringe on the copyright or trade secrets of any third party in performing services under this Agreement. To the extent any material used by Developer contains matter proprietary to a third party, Developer shall obtain a license from the owner permitting the use of such matter and granting Developer the right to sublicense its use. Developer will not knowingly infringe upon any existing patents of third parties in the performance of services required by this Agreement, but Developer MAKES NO WARRANTY OF NONINFRINGEMENT of any United States or foreign patent.&nbsp;<div style="display: inline;display: inline" class="nolo-help ng-isolate-scope" data-field-help-text="<p>
    <span style=&quot;font-size: 12px;&quot;>Choose this option to warrant that the developer will not knowingly violate the copyright or trade secrets rights of any third party. Still, no warranty is made as to patent infringement. This is because it is very difficult for a developer to know for sure whether its content might violate a patent, primarily because many pending patent applications are kept secret. Instead, you simply promise that, to the best of your knowledge, the Developer Content will not infringe any existing patent. Some clients absolutely insist that the developer indemnify (repay) them if a third party brings a lawsuit claiming the Developer Content infringed on the party&amp;#39;s intellectual property rights.&amp;nbsp;</span></p>" data-field-required="false" data-field-type="help" disabled="disabled" field="fields.get('limited warranty against infringement')" name="limited warranty against infringement" src="/ckeditor/plugins/nolohelp/images/help.png" type="text" value="limited warranty against infringement">
    <!-- ngIf: field.hasHelpText() --><i class="icon-question-sign has-help-popover ng-scope" rel="popover" ng-click="showHelpPopover($event)" ng-if="field.hasHelpText()" data-content="<p>
    <span style=&quot;font-size: 12px;&quot;>Choose this option to warrant that the developer will not knowingly violate the copyright or trade secrets rights of any third party. Still, no warranty is made as to patent infringement. This is because it is very difficult for a developer to know for sure whether its content might violate a patent, primarily because many pending patent applications are kept secret. Instead, you simply promise that, to the best of your knowledge, the Developer Content will not infringe any existing patent. Some clients absolutely insist that the developer indemnify (repay) them if a third party brings a lawsuit claiming the Developer Content infringed on the party&amp;#39;s intellectual property rights.&amp;nbsp;</span></p>
" style="display: inline"></i><!-- end ngIf: field.hasHelpText() -->
</div></p>
                <div multiple-selection-display="" data-field-name="indemnification, option" options="options" field="field" fields="fields" value-index="undefined" class="ng-scope ng-isolate-scope"><div class="online-form-optional-clause nolo_field" data-field-name="indemnification, option" ng-click="setActiveField(field.name, $event, valueIndex); $event.stopPropagation();" value-index="0">
    <h4 class="questionText ng-binding" ng-bind-html="(getInterviewText()) | html"></h4>
    <h5><span class="chooseText ng-binding">Optional Clause:</span> <!-- ngIf: field.hasHelpText() --><i class="icon-question-sign has-help-popover ng-scope" rel="popover" ng-click="showHelpPopover($event)" ng-if="field.hasHelpText()" data-content="<p>
    Indemnification is an agreement by the developer to defend the client if a lawsuit is brought by a third party.</p>
" style="display: inline"></i><!-- end ngIf: field.hasHelpText() --></h5>
    <table class="multipleSelectionTable">
        <tbody>
            <!-- ngRepeat: option in options --><tr ng-repeat="option in options" ng-class="getClass($index)" ng-click="selectOption($index, valueIndex, $event)" class="ng-scope unselectedClause">
                <td class="optional-clause-answer optionSelection" width="20"><div ng-class="getCheckboxClass($index)"><input type="checkbox" value="0" ng-checked="field.isSelected($index, valueIndex)" ng-disabled="$parent.$parent.isReadOnly()"></div></td>
                <td class="optional-clause-index optionSelection" width="20"><span class="optionIndex ng-binding"></span></td>
                <td class="optional-clause multipleSelectionOption"><div compile-html="option"><div class="ng-scope">
                                <p>
                                    If any third party brings a lawsuit or proceeding against Client based upon a claim that the Developer Content breaches the third party's patent, copyright, or trade secrets rights, and it is determined that such infringement has occurred, Developer shall hold Client harmless against any loss, damage, expense, or cost, including reasonable attorney fees, arising from the claim.<div style="display: inline;display: inline" class="nolo-help ng-isolate-scope" data-field-help-text="<p>
    This&amp;nbsp;optional indemnification provision&amp;nbsp;is as narrowly drafted as possible. The developer must indemnify the client only if the third-party intellectual property rights involved were known to them prior to delivery of the content.</p>" data-field-required="false" data-field-type="help" disabled="disabled" field="fields.get('limited warranty against infringement, help')" name="limited warranty against infringement, help" src="/ckeditor/plugins/nolohelp/images/help.png" type="text" value="limited warranty against infringement, help">
    <!-- ngIf: field.hasHelpText() --><i class="icon-question-sign has-help-popover ng-scope" rel="popover" ng-click="showHelpPopover($event)" ng-if="field.hasHelpText()" data-content="<p>
    This&amp;nbsp;optional indemnification provision&amp;nbsp;is as narrowly drafted as possible. The developer must indemnify the client only if the third-party intellectual property rights involved were known to them prior to delivery of the content.</p>
" style="display: inline"></i><!-- end ngIf: field.hasHelpText() -->
</div></p>
                                <p>
                                    This indemnification obligation shall be effective only if:</p>
                                <ul>
                                    <li>
                                        the third-party intellectual property rights involved were known to Developer prior to delivery of the Developer Content;</li>
                                </ul>
                                <ul>
                                    <li>
                                        Client has made all payments required by this Agreement;</li>
                                </ul>
                                <ul>
                                    <li>
                                        Client has given prompt notice of the claim and permitted Developer to defend; and</li>
                                </ul>
                                <ul>
                                    <li>
                                        the claim does not result from Client's modification of Developer Content.</li>
                                </ul>
                                <p>
                                    To reduce or mitigate damages, Developer may at its own expense replace the Developer Content with noninfringing content.</p>
                            </div></div></td>
            </tr><!-- end ngRepeat: option in options -->
        </tbody>
    </table>
</div></div>
            </div></div></td>
            </tr><!-- end ngRepeat: option in options track by $index --><tr ng-repeat="option in options track by $index" ng-class="getClass($index)" ng-click="selectOption($index, valueIndex, $event)" class="ng-scope unselectedClause">
                <td class="optional-clause-answer optionSelection" width="20">
                    <div ng-class="getCheckboxClass($index)" class="ng-binding">
                        <input type="radio" ng-model="field.value[valueIndex]" value="&quot;no-knowledge&quot; representation" ng-checked="isSelected($index)" ng-disabled="$parent.$parent.isReadOnly()" class="ng-pristine ng-untouched ng-valid" name="502"> 
                    </div>
                </td>
                <td class="optional-clause-index optionSelection" width="20"><span class="optionIndex ng-binding">B:</span></td>
                <td class="optional-clause alternateSelectionOption"><div compile-html="option"><div class="ng-scope">
                <p>
                    Developer represents, BUT DOES NOT WARRANT, that to the best of its knowledge the Developer Content delivered to Client under this Agreement will not infringe any valid and existing intellectual property right of any third party.<div style="display: inline;display: inline" class="nolo-help ng-isolate-scope" data-field-help-text="<p>
    With this option the developer provides no warranty of noninfringement at all, and also extends the &amp;quot;no-knowledge&amp;quot; representation to copyrights and trade secrets as well as patents.</p>" data-field-required="false" data-field-type="help" disabled="disabled" field="fields.get('no-knowledge representation, help')" name="no-knowledge representation, help" src="/ckeditor/plugins/nolohelp/images/help.png" type="text" value="no-knowledge representation, help">
    <!-- ngIf: field.hasHelpText() --><i class="icon-question-sign has-help-popover ng-scope" rel="popover" ng-click="showHelpPopover($event)" ng-if="field.hasHelpText()" data-content="<p>
    With this option the developer provides no warranty of noninfringement at all, and also extends the &amp;quot;no-knowledge&amp;quot; representation to copyrights and trade secrets as well as patents.</p>
" style="display: inline"></i><!-- end ngIf: field.hasHelpText() -->
</div></p>
            </div></div></td>
            </tr><!-- end ngRepeat: option in options track by $index --><tr ng-repeat="option in options track by $index" ng-class="getClass($index)" ng-click="selectOption($index, valueIndex, $event)" class="ng-scope unselectedClause">
                <td class="optional-clause-answer optionSelection" width="20">
                    <div ng-class="getCheckboxClass($index)" class="ng-binding">
                        <input type="radio" ng-model="field.value[valueIndex]" value="no warranties or representations" ng-checked="isSelected($index)" ng-disabled="$parent.$parent.isReadOnly()" class="ng-pristine ng-untouched ng-valid" name="504"> 
                    </div>
                </td>
                <td class="optional-clause-index optionSelection" width="20"><span class="optionIndex ng-binding">C:</span></td>
                <td class="optional-clause alternateSelectionOption"><div compile-html="option"><div class="ng-scope">
                <p>
                    THE DEVELOPER CONTENT FURNISHED UNDER THIS AGREEMENT IS PROVIDED WITHOUT ANY EXPRESS OR IMPLIED WARRANTIES OR REPRESENTATIONS AGAINST INFRINGEMENT, AND DEVELOPER SHALL NOT INDEMNIFY CLIENT AGAINST INFRINGEMENT OF ANY PATENTS, COPYRIGHTS, TRADE SECRETS, OR OTHER PROPRIETARY RIGHTS.<div style="display: inline;display: inline" class="nolo-help ng-isolate-scope" data-field-help-text="<p>
    <span style=&quot;font-size: 12px;&quot;>The third, and best, option from your point of view is this provision in which you state that you make no warranties or representations of any kind regarding intellectual property infringement and will not indemnify the client if an infringement claim is made. If you use this clause, it should be printed in boldfaced, capital letters.&amp;nbsp;</span></p>" data-field-required="false" data-field-type="help" disabled="disabled" field="fields.get('no warranties or representations, help')" name="no warranties or representations, help" src="/ckeditor/plugins/nolohelp/images/help.png" type="text" value="no warranties or representations, help">
    <!-- ngIf: field.hasHelpText() --><i class="icon-question-sign has-help-popover ng-scope" rel="popover" ng-click="showHelpPopover($event)" ng-if="field.hasHelpText()" data-content="<p>
    <span style=&quot;font-size: 12px;&quot;>The third, and best, option from your point of view is this provision in which you state that you make no warranties or representations of any kind regarding intellectual property infringement and will not indemnify the client if an infringement claim is made. If you use this clause, it should be printed in boldfaced, capital letters.&amp;nbsp;</span></p>
" style="display: inline"></i><!-- end ngIf: field.hasHelpText() -->
</div></p>
            </div></div></td>
            </tr><!-- end ngRepeat: option in options track by $index -->
        </tbody>
    </table>
</div></div>
<div multiple-selection-display="" data-field-name="limitation of developer's liability to client option" options="options" field="field" fields="fields" value-index="undefined" class="ng-scope ng-isolate-scope"><div class="online-form-optional-clause nolo_field" data-field-name="limitation of developer's liability to client option" ng-click="setActiveField(field.name, $event, valueIndex); $event.stopPropagation();" value-index="0">
    <h4 class="questionText ng-binding" ng-bind-html="(getInterviewText()) | html"></h4>
    <h5><span class="chooseText ng-binding">Optional Clause:</span> <!-- ngIf: field.hasHelpText() --></h5>
    <table class="multipleSelectionTable">
        <tbody>
            <!-- ngRepeat: option in options --><tr ng-repeat="option in options" ng-class="getClass($index)" ng-click="selectOption($index, valueIndex, $event)" class="ng-scope unselectedClause">
                <td class="optional-clause-answer optionSelection" width="20"><div ng-class="getCheckboxClass($index)"><input type="checkbox" value="0" ng-checked="field.isSelected($index, valueIndex)" ng-disabled="$parent.$parent.isReadOnly()"></div></td>
                <td class="optional-clause-index optionSelection" width="20"><span class="optionIndex ng-binding"></span></td>
                <td class="optional-clause multipleSelectionOption"><div compile-html="option"><div class="ng-scope">
                <div id="clause-16-wrapper" class="clauseWrapper"><h3 class="clauseHeader" id="clause16"><span class="ng-binding ng-scope">17. </span><span class="ng-scope">
                    Limitation of Developer's Liability to Client<div style="color: rgb(34, 34, 34); font-family: Arial, Verdana, sans-serif; font-size: 12px;;display: inline;display: inline;display: inline;display: inline" class="nolo-help ng-isolate-scope" data-field-help-text="<p>
    <span style=&quot;font-size: 12px;&quot;>This optional provision limits the developer&amp;#39;s total liability to the client if something goes wrong with its work. This form provides the below limits to the liability of the developer.</span></p>" data-field-required="false" data-field-type="help" disabled="disabled" field="fields.get('limitation of developer\'s liability to client, help')" name="limitation of developer's liability to client, help" src="/ckeditor/plugins/nolohelp/images/help.png" type="text" value="limitation of developer's liability to client, help">
    <!-- ngIf: field.hasHelpText() --><i class="icon-question-sign has-help-popover ng-scope" rel="popover" ng-click="showHelpPopover($event)" ng-if="field.hasHelpText()" data-content="<p>
    <span style=&quot;font-size: 12px;&quot;>This optional provision limits the developer&amp;#39;s total liability to the client if something goes wrong with its work. This form provides the below limits to the liability of the developer.</span></p>
" style="display: inline"></i><!-- end ngIf: field.hasHelpText() -->
</div></span></h3></div>
                <p>
                    (a)	In no event shall Developer be liable to Client for lost profits of Client, or special or consequential damages, even if Developer has been advised of the possibility of such damages.<div style="display: inline;display: inline" class="nolo-help ng-isolate-scope" data-field-help-text="<p>
    Incidental or consequential damages include lost profits or other economic damages arising from a malfunction when the developer had reason to know that such losses could occur if the website malfunctioned. This could include, for example, the value of online sales lost if a client&amp;#39;s website breaks down. Such damages can be substantial. This clause eliminates liability for such damages.</p>" data-field-required="false" data-field-type="help" disabled="disabled" field="fields.get('no liability for consequential damages, help')" name="no liability for consequential damages, help" src="/ckeditor/plugins/nolohelp/images/help.png" type="text" value="no liability for consequential damages, help">
    <!-- ngIf: field.hasHelpText() --><i class="icon-question-sign has-help-popover ng-scope" rel="popover" ng-click="showHelpPopover($event)" ng-if="field.hasHelpText()" data-content="<p>
    Incidental or consequential damages include lost profits or other economic damages arising from a malfunction when the developer had reason to know that such losses could occur if the website malfunctioned. This could include, for example, the value of online sales lost if a client&amp;#39;s website breaks down. Such damages can be substantial. This clause eliminates liability for such damages.</p>
" style="display: inline"></i><!-- end ngIf: field.hasHelpText() -->
</div></p>
                <p>
                    (b)	Developer's total liability under this Agreement for damages, costs, and expenses, regardless of cause, shall not exceed the total amount of fees paid to Developer by Client under this Agreement&nbsp;or $<span class="nolo_field inline-editor question-box-edit-dialog ng-scope ng-isolate-scope" data-field-name="monetary limit of developer's liability" nolo-question-box-edit-dialog="" field="field" value-index="undefined">
    <span class="inline-field-value inlineFormElement ng-binding" ng-click="setActiveField(field.name, $event, valueIndex); $event.stopPropagation();" ng-bind-html="(field.displayValue(false, valueIndex)) | html">monetary limit of developer's liability</span>
    <!-- ngIf: field.hasHelpText() -->
</span>, whichever is greater.<div style="display: inline;display: inline" class="nolo-help ng-isolate-scope" data-field-help-text="<p>
    This clause limits the developer&amp;#39;s potential liability to the client to a specified amount. A typical liability limit is the amount paid the developer by the client. This amounts to a money-back guarantee for the client, while getting the developer off the hook for a potentially much larger liability. If desired, a liability standard not based on the contract price can be set. Obviously, such a provision highly favors the developer.</p>" data-field-required="false" data-field-type="help" disabled="disabled" field="fields.get('limit on developer\'s liability to client')" name="limit on developer's liability to client" src="/ckeditor/plugins/nolohelp/images/help.png" type="text" value="limit on developer's liability to client">
    <!-- ngIf: field.hasHelpText() --><i class="icon-question-sign has-help-popover ng-scope" rel="popover" ng-click="showHelpPopover($event)" ng-if="field.hasHelpText()" data-content="<p>
    This clause limits the developer&amp;#39;s potential liability to the client to a specified amount. A typical liability limit is the amount paid the developer by the client. This amounts to a money-back guarantee for the client, while getting the developer off the hook for a potentially much larger liability. If desired, a liability standard not based on the contract price can be set. Obviously, such a provision highly favors the developer.</p>
" style="display: inline"></i><!-- end ngIf: field.hasHelpText() -->
</div></p>
                <p>
                    (c)	Developer shall not be liable for any claim or demand made against Client by any third party except to the extent such claim or demand relates to copyright, trade secret, or other proprietary rights, and then only as provided in the section of this Agreement entitled Intellectual Property Infringement Claims.<div style="display: inline;display: inline" class="nolo-help ng-isolate-scope" data-field-help-text="<p>
    A third party is a person or company other than the client. It is possible that the developer could end up getting sued by a third party. This clause provides that the developer is not liable for any claim made against the client by any third party (other than for intellectual property infringement if it is providing a warranty against infringement).&amp;nbsp;</p>" data-field-required="false" data-field-type="help" disabled="disabled" field="fields.get('developer\'s liability for third-party claims')" name="developer's liability for third-party claims" src="/ckeditor/plugins/nolohelp/images/help.png" type="text" value="developer's liability for third-party claims">
    <!-- ngIf: field.hasHelpText() --><i class="icon-question-sign has-help-popover ng-scope" rel="popover" ng-click="showHelpPopover($event)" ng-if="field.hasHelpText()" data-content="<p>
    A third party is a person or company other than the client. It is possible that the developer could end up getting sued by a third party. This clause provides that the developer is not liable for any claim made against the client by any third party (other than for intellectual property infringement if it is providing a warranty against infringement).&amp;nbsp;</p>
" style="display: inline"></i><!-- end ngIf: field.hasHelpText() -->
</div></p>
                <p>
                    (d)	Client shall indemnify Developer against all claims, liabilities, and costs, including reasonable attorney fees, of defending any third-party claim or suit arising out of the use of the Developer Content provided under this Agreement, other than for infringement of intellectual property rights.&nbsp; Developer shall promptly notify Client in writing of any third-party claim or suit and Client shall have the right to fully control the defense and any settlement of such claim or suit.<div style="display: inline;display: inline" class="nolo-help ng-isolate-scope" data-field-help-text="<p>
    This clause requires the client to indemnify the developer if it is sued by a third party (someone other than the client). This means the client must pay the developer&amp;#39;s legal expenses and any damages awarded against them.&amp;nbsp;</p>" data-field-required="false" data-field-type="help" disabled="disabled" field="fields.get('indemnification of developer for third-party claims')" name="indemnification of developer for third-party claims" src="/ckeditor/plugins/nolohelp/images/help.png" type="text" value="indemnification of developer for third-party claims">
    <!-- ngIf: field.hasHelpText() --><i class="icon-question-sign has-help-popover ng-scope" rel="popover" ng-click="showHelpPopover($event)" ng-if="field.hasHelpText()" data-content="<p>
    This clause requires the client to indemnify the developer if it is sued by a third party (someone other than the client). This means the client must pay the developer&amp;#39;s legal expenses and any damages awarded against them.&amp;nbsp;</p>
" style="display: inline"></i><!-- end ngIf: field.hasHelpText() -->
</div></p>
            </div></div></td>
            </tr><!-- end ngRepeat: option in options -->
        </tbody>
    </table>
</div></div>
<div id="clause-17-wrapper" class="clauseWrapper"><h3 class="clauseHeader" id="clause17"><span class="ng-binding ng-scope">18. </span><span class="ng-scope">
    Client Representations and Warranties<div style="color: rgb(34, 34, 34); font-family: Arial, Verdana, sans-serif; font-size: 12px;;display: inline;display: inline;display: inline;display: inline" class="nolo-help ng-isolate-scope" data-field-help-text="<p>
    <span style=&quot;font-size: 12px;&quot;>The client should provide the developer with certain warranties. This clause provides the following warranties and also requires the client to indemnify the developer in case of a breach.</span></p>" data-field-required="false" data-field-type="help" disabled="disabled" field="fields.get('client representations and warranties')" name="client representations and warranties" src="/ckeditor/plugins/nolohelp/images/help.png" type="text" value="client representations and warranties">
    <!-- ngIf: field.hasHelpText() --><i class="icon-question-sign has-help-popover ng-scope" rel="popover" ng-click="showHelpPopover($event)" ng-if="field.hasHelpText()" data-content="<p>
    <span style=&quot;font-size: 12px;&quot;>The client should provide the developer with certain warranties. This clause provides the following warranties and also requires the client to indemnify the developer in case of a breach.</span></p>
" style="display: inline"></i><!-- end ngIf: field.hasHelpText() -->
</div></span></h3></div>
<p>
    Client represents and warrants to Developer as follows:</p>
<ul>
    <li>
        Client has the authority to enter into and perform its obligations under this Agreement;<div style="display: inline;display: inline" class="nolo-help ng-isolate-scope" data-field-help-text="<p>
    Client authority means the person who signs the Agreement has legal authority to do so on the client&amp;#39;s behalf.</p>" data-field-required="false" data-field-type="help" disabled="disabled" field="fields.get('client authority')" name="client authority" src="/ckeditor/plugins/nolohelp/images/help.png" type="text" value="client authority">
    <!-- ngIf: field.hasHelpText() --><i class="icon-question-sign has-help-popover ng-scope" rel="popover" ng-click="showHelpPopover($event)" ng-if="field.hasHelpText()" data-content="<p>
    Client authority means the person who signs the Agreement has legal authority to do so on the client&amp;#39;s behalf.</p>
" style="display: inline"></i><!-- end ngIf: field.hasHelpText() -->
</div></li>
</ul>
<ul>
    <li>
        Client has or will obtain all necessary and appropriate rights and licenses to grant the license to Developer to use Client Content for the Site; and</li>
</ul>
<ul>
    <li>
        Client has or will obtain any authorizations necessary for hypertext links from the Site to any other third-party websites.</li>
</ul>
<p>
    Client will indemnify Developer from any third-party claims resulting in losses, damages, liabilities, costs, charges, and expenses, including reasonable attorney fees, arising out of any breach of any of Client's representations and warranties contained in this Agreement. For such indemnification to be effective, however, Developer must give Client prompt written notice of any such claim and provide Client such reasonable cooperation and assistance as Client may request in the defense of such suit. Client will have sole control over any such suit or proceeding.</p>
<div id="clause-18-wrapper" class="clauseWrapper"><h3 class="clauseHeader" id="clause18"><span class="ng-binding ng-scope">19. </span><span class="ng-scope">
    Confidentiality<div style="color: rgb(34, 34, 34); font-family: Arial, Verdana, sans-serif; font-size: 12px;;display: inline;display: inline;display: inline;display: inline" class="nolo-help ng-isolate-scope" data-field-help-text="<p>
    Since website developers often have access to their clients&amp;#39; valuable confidential information, clients often seek to impose confidentiality restrictions on them. It&amp;#39;s not unreasonable for a client to want the developer to keep its secrets away from competitors. Unfortunately, however, many of these provisions are worded so broadly that they can make it difficult for the developer to work for other clients without fear or violating their duty of confidentiality. If the developer performs services for many firms that may compete with each other, they should insist on a confidentiality provision that is reasonable in scope and defines precisely what information must be kept confidential.</p>" data-field-required="false" data-field-type="help" disabled="disabled" field="fields.get('confidentiality, help')" name="confidentiality, help" src="/ckeditor/plugins/nolohelp/images/help.png" type="text" value="confidentiality, help">
    <!-- ngIf: field.hasHelpText() --><i class="icon-question-sign has-help-popover ng-scope" rel="popover" ng-click="showHelpPopover($event)" ng-if="field.hasHelpText()" data-content="<p>
    Since website developers often have access to their clients&amp;#39; valuable confidential information, clients often seek to impose confidentiality restrictions on them. It&amp;#39;s not unreasonable for a client to want the developer to keep its secrets away from competitors. Unfortunately, however, many of these provisions are worded so broadly that they can make it difficult for the developer to work for other clients without fear or violating their duty of confidentiality. If the developer performs services for many firms that may compete with each other, they should insist on a confidentiality provision that is reasonable in scope and defines precisely what information must be kept confidential.</p>
" style="display: inline"></i><!-- end ngIf: field.hasHelpText() -->
</div></span></h3></div>
<p>
    Confidentiality: During the term of this Agreement and for&nbsp;<span class="nolo_field inline-editor question-box-edit-dialog ng-scope ng-isolate-scope" data-field-name="length of confidentiality" nolo-question-box-edit-dialog="" field="field" value-index="undefined">
    <span class="inline-field-value inlineFormElement ng-binding" ng-click="setActiveField(field.name, $event, valueIndex); $event.stopPropagation();" ng-bind-html="(field.displayValue(false, valueIndex)) | html">length of confidentiality</span>
    <!-- ngIf: field.hasHelpText() -->
</span><div style="display: inline;display: inline" class="nolo-help ng-isolate-scope" data-field-help-text="<p>
    The term of the confidentiality agreement must be specified. Such a provision should last for only a limited time -- five years at the most.</p>" data-field-required="false" data-field-type="help" disabled="disabled" field="fields.get('length of confidentiality, help')" name="length of confidentiality, help" src="/ckeditor/plugins/nolohelp/images/help.png" type="text" value="length of confidentiality, help">
    <!-- ngIf: field.hasHelpText() --><i class="icon-question-sign has-help-popover ng-scope" rel="popover" ng-click="showHelpPopover($event)" ng-if="field.hasHelpText()" data-content="<p>
    The term of the confidentiality agreement must be specified. Such a provision should last for only a limited time -- five years at the most.</p>
" style="display: inline"></i><!-- end ngIf: field.hasHelpText() -->
</div>&nbsp;afterward, Developer will use reasonable care to prevent the unauthorized use or dissemination of Client's confidential information. Reasonable care means at least the same degree of care Developer uses to protect its own confidential information from unauthorized disclosure.</p>
<p>
    Confidential information is limited to information clearly marked as confidential, or disclosed orally that is treated as confidential when disclosed and summarized and identified as confidential in a writing delivered to Developer within 15 days of disclosure.</p>
<p>
    Confidential information does not include information that:</p>
<ul>
    <li>
        the Developer knew before Client disclosed it;</li>
</ul>
<ul>
    <li>
        is or becomes public knowledge through no fault of Developer;</li>
</ul>
<ul>
    <li>
        Developer obtains from sources other than Client who owe no duty of confidentiality to Client; or</li>
</ul>
<ul>
    <li>
        Developer develops independently.</li>
</ul>
<div id="clause-19-wrapper" class="clauseWrapper"><h3 class="clauseHeader" id="clause19"><span class="ng-binding ng-scope">20. </span><span class="ng-scope">
    Term of Agreement</span></h3></div>
<p>
    This Agreement commences on the date it is executed and shall continue until full performance by both parties, or until earlier terminated by one party under the terms of this Agreement.</p>
<div id="clause-20-wrapper" class="clauseWrapper"><h3 class="clauseHeader" id="clause20"><span class="ng-binding ng-scope">21. </span><span class="ng-scope">
    Termination of Agreement<div style="color: rgb(34, 34, 34); font-family: Arial, Verdana, sans-serif; font-size: 12px;;display: inline;display: inline;display: inline;display: inline" class="nolo-help ng-isolate-scope" data-field-help-text="<p>
    <span style=&quot;font-size: 12px;&quot;>The provision in this&amp;nbsp;agreement&amp;nbsp;is fairly standard and permits either party to terminate the agreement if the other materially breaches any of its contractual obligations and fails to remedy the breach within 30 days. A &amp;quot;material&amp;quot; breach means a breach that is serious, rather than minor or trivial. Missing a deadline by one day is not &amp;quot;material&amp;quot;; missing it by three months is.</span></p>
<p>
    For developers, the material breach most likely to result in termination is the client&amp;#39;s failure to pay the developer in a timely fashion. If the developer terminates the agreement because of the client&amp;#39;s default, the client should return any Developer Content or other materials received and pay for the work done.&amp;nbsp;</p>" data-field-required="false" data-field-type="help" disabled="disabled" field="fields.get('termination of agreement, help')" name="termination of agreement, help" src="/ckeditor/plugins/nolohelp/images/help.png" type="text" value="termination of agreement, help">
    <!-- ngIf: field.hasHelpText() --><i class="icon-question-sign has-help-popover ng-scope" rel="popover" ng-click="showHelpPopover($event)" ng-if="field.hasHelpText()" data-content="<p>
    <span style=&quot;font-size: 12px;&quot;>The provision in this&amp;nbsp;agreement&amp;nbsp;is fairly standard and permits either party to terminate the agreement if the other materially breaches any of its contractual obligations and fails to remedy the breach within 30 days. A &amp;quot;material&amp;quot; breach means a breach that is serious, rather than minor or trivial. Missing a deadline by one day is not &amp;quot;material&amp;quot;; missing it by three months is.</span></p>
<p>
    For developers, the material breach most likely to result in termination is the client&amp;#39;s failure to pay the developer in a timely fashion. If the developer terminates the agreement because of the client&amp;#39;s default, the client should return any Developer Content or other materials received and pay for the work done.&amp;nbsp;</p>
" style="display: inline"></i><!-- end ngIf: field.hasHelpText() -->
</div></span></h3></div>
<p>
    Each party shall have the right to terminate this Agreement by written notice to the other if a party has materially breached any obligation herein and such breach remains uncured for a period of 30 days after written notice of such breach is sent to the other party.</p>
<p>
    If Developer terminates this Agreement because of Client's default, all of the following shall apply:</p>
<ol>
    <li>
        Client shall immediately cease use of the Developer Content;</li>
    <li>
        Client shall, within ten days of such termination, deliver to Developer all copies and portions of the Developer Content and related materials and documentation in its possession furnished by Developer under this Agreement;</li>
    <li>
        All amounts payable or accrued to Developer under this Agreement shall become immediately due and payable; and</li>
    <li>
        All rights and licenses granted to Client under this Agreement shall immediately terminate.&nbsp;</li>
</ol>
<div multiple-selection-display="" data-field-name="termination, option" options="options" field="field" fields="fields" value-index="undefined" class="ng-scope ng-isolate-scope"><div class="online-form-optional-clause nolo_field" data-field-name="termination, option" ng-click="setActiveField(field.name, $event, valueIndex); $event.stopPropagation();" value-index="0">
    <h4 class="questionText ng-binding" ng-bind-html="(getInterviewText()) | html"></h4>
    <h5><span class="chooseText ng-binding">Optional Clause:</span> <!-- ngIf: field.hasHelpText() --></h5>
    <table class="multipleSelectionTable">
        <tbody>
            <!-- ngRepeat: option in options --><tr ng-repeat="option in options" ng-class="getClass($index)" ng-click="selectOption($index, valueIndex, $event)" class="ng-scope unselectedClause">
                <td class="optional-clause-answer optionSelection" width="20"><div ng-class="getCheckboxClass($index)"><input type="checkbox" value="0" ng-checked="field.isSelected($index, valueIndex)" ng-disabled="$parent.$parent.isReadOnly()"></div></td>
                <td class="optional-clause-index optionSelection" width="20"><span class="optionIndex ng-binding"></span></td>
                <td class="optional-clause multipleSelectionOption"><div compile-html="option"><div class="ng-scope">
                <p>
                    This Agreement may be terminated by Client for its convenience upon thirty (30) days' prior written notice to Developer. Upon such termination, all amounts owed to Developer under this Agreement for accepted work shall immediately become due and payable and all rights and licenses granted by Developer to Client under this Agreement shall immediately terminate.<div style="display: inline;display: inline" class="nolo-help ng-isolate-scope" data-field-help-text="<p>
    The client may want the option to terminate the agreement at its convenience if it decides it doesn&amp;#39;t want to go through with the project. In this event, the client should have to pay the developer all amounts due for accepted work and relinquish any rights to Developer Content.</p>" data-field-required="false" data-field-type="help" disabled="disabled" field="fields.get('termination optional, help')" name="termination optional, help" src="/ckeditor/plugins/nolohelp/images/help.png" type="text" value="termination optional, help">
    <!-- ngIf: field.hasHelpText() --><i class="icon-question-sign has-help-popover ng-scope" rel="popover" ng-click="showHelpPopover($event)" ng-if="field.hasHelpText()" data-content="<p>
    The client may want the option to terminate the agreement at its convenience if it decides it doesn&amp;#39;t want to go through with the project. In this event, the client should have to pay the developer all amounts due for accepted work and relinquish any rights to Developer Content.</p>
" style="display: inline"></i><!-- end ngIf: field.hasHelpText() -->
</div></p>
            </div></div></td>
            </tr><!-- end ngRepeat: option in options -->
        </tbody>
    </table>
</div></div>
<div id="clause-21-wrapper" class="clauseWrapper"><h3 class="clauseHeader" id="clause21"><span class="ng-binding ng-scope">22. </span><span class="ng-scope">
    Taxes<div style="color: rgb(34, 34, 34); font-family: Arial, Verdana, sans-serif; font-size: 12px;;display: inline;display: inline;display: inline;display: inline" class="nolo-help ng-isolate-scope" data-field-help-text="<p>
    <span style=&quot;font-size: 12px;&quot;>Whether or not the developer is required to collect sales or other taxes, the following provision should be included in the agreement, making it clear that the client will have to pay these and similar taxes. States constantly change their sales tax laws and more and more are beginning to look at services as a good source of sales tax revenue. This provision could come in handy in the future even if it isn&amp;#39;t necessary now.</span></p>" data-field-required="false" data-field-type="help" disabled="disabled" field="fields.get('taxes, help')" name="taxes, help" src="/ckeditor/plugins/nolohelp/images/help.png" type="text" value="taxes, help">
    <!-- ngIf: field.hasHelpText() --><i class="icon-question-sign has-help-popover ng-scope" rel="popover" ng-click="showHelpPopover($event)" ng-if="field.hasHelpText()" data-content="<p>
    <span style=&quot;font-size: 12px;&quot;>Whether or not the developer is required to collect sales or other taxes, the following provision should be included in the agreement, making it clear that the client will have to pay these and similar taxes. States constantly change their sales tax laws and more and more are beginning to look at services as a good source of sales tax revenue. This provision could come in handy in the future even if it isn&amp;#39;t necessary now.</span></p>
" style="display: inline"></i><!-- end ngIf: field.hasHelpText() -->
</div></span></h3></div>
<p>
    The charges included here do not include taxes. If Developer is required to pay any federal, state, or local sales, use, property, or value added taxes based on the services provided under this Agreement, the taxes shall be separately billed to Client. Developer shall not pay any interest or penalties incurred due to late payment or nonpayment of such taxes by Client.</p>
<div id="clause-22-wrapper" class="clauseWrapper"><h3 class="clauseHeader" id="clause22"><span class="ng-binding ng-scope">23. </span><span class="ng-scope">
    Developer an Independent Contractor<div style="color: rgb(34, 34, 34); font-family: Arial, Verdana, sans-serif; font-size: 12px;;display: inline;display: inline;display: inline;display: inline" class="nolo-help ng-isolate-scope" data-field-help-text="<p>
    One of the most important functions of the agreement is to help establish that the developer is not the client&amp;#39;s employee. The developer will be considered the client&amp;#39;s employee if the client has the right to control the developer. This will cause problems for both parties. A development agreement that indicates a lack of control on the part of the hiring firm will contribute to a finding of independent contractor status. But such an agreement will not be determinative in and of itself. Simply signing a piece of paper will not make you an independent contractor. The agreement must reflect reality -- that is, the developer must actually not be controlled on the job by the client.&amp;nbsp;</p>" data-field-required="false" data-field-type="help" disabled="disabled" field="fields.get('developer an independent contractor, help')" name="developer an independent contractor, help" src="/ckeditor/plugins/nolohelp/images/help.png" type="text" value="developer an independent contractor, help">
    <!-- ngIf: field.hasHelpText() --><i class="icon-question-sign has-help-popover ng-scope" rel="popover" ng-click="showHelpPopover($event)" ng-if="field.hasHelpText()" data-content="<p>
    One of the most important functions of the agreement is to help establish that the developer is not the client&amp;#39;s employee. The developer will be considered the client&amp;#39;s employee if the client has the right to control the developer. This will cause problems for both parties. A development agreement that indicates a lack of control on the part of the hiring firm will contribute to a finding of independent contractor status. But such an agreement will not be determinative in and of itself. Simply signing a piece of paper will not make you an independent contractor. The agreement must reflect reality -- that is, the developer must actually not be controlled on the job by the client.&amp;nbsp;</p>
" style="display: inline"></i><!-- end ngIf: field.hasHelpText() -->
</div></span></h3></div>
<p>
    Developer is an independent contractor, and neither Developer nor Developer's staff is, or shall be deemed, Client's employees. In its capacity as an independent contractor, Developer agrees and represents, and Client agrees, as follows:</p>
<div multiple-selection-display="" data-field-name="developer an independent contractor, option" options="options" field="field" fields="fields" value-index="undefined" class="ng-scope ng-isolate-scope"><div class="online-form-optional-clause nolo_field" data-field-name="developer an independent contractor, option" ng-click="setActiveField(field.name, $event, valueIndex); $event.stopPropagation();" value-index="0">
    <h4 class="questionText ng-binding" ng-bind-html="(getInterviewText()) | html"></h4>
    <h5><span class="chooseText ng-binding">Choose any that apply:</span> <!-- ngIf: field.hasHelpText() --><i class="icon-question-sign has-help-popover ng-scope" rel="popover" ng-click="showHelpPopover($event)" ng-if="field.hasHelpText()" data-content="<p>
    The language in this clause addresses most of the factors the IRS and other agencies consider in measuring the degree of control of the hiring firm. All provisions show that the hiring firm lacks the right to control the manner and means by which the developer will perform the agreed-upon services. The more that apply, the more likely that the developer will be viewed as an independent contractor.</p>
" style="display: inline"></i><!-- end ngIf: field.hasHelpText() --></h5>
    <table class="multipleSelectionTable">
        <tbody>
            <!-- ngRepeat: option in options --><tr ng-repeat="option in options" ng-class="getClass($index)" ng-click="selectOption($index, valueIndex, $event)" class="ng-scope unselectedClause">
                <td class="optional-clause-answer optionSelection" width="20"><div ng-class="getCheckboxClass($index)"><input type="checkbox" value="0" ng-checked="field.isSelected($index, valueIndex)" ng-disabled="$parent.$parent.isReadOnly()"></div></td>
                <td class="optional-clause-index optionSelection" width="20"><span class="optionIndex ng-binding">A:</span></td>
                <td class="optional-clause multipleSelectionOption"><div compile-html="option"><div class="ng-scope">
                <p>
                    Developer has the right to perform services for others during the term of this Agreement subject to noncompetition provisions set out in this Agreement, if any.</p>
            </div></div></td>
            </tr><!-- end ngRepeat: option in options --><tr ng-repeat="option in options" ng-class="getClass($index)" ng-click="selectOption($index, valueIndex, $event)" class="ng-scope unselectedClause">
                <td class="optional-clause-answer optionSelection" width="20"><div ng-class="getCheckboxClass($index)"><input type="checkbox" value="1" ng-checked="field.isSelected($index, valueIndex)" ng-disabled="$parent.$parent.isReadOnly()"></div></td>
                <td class="optional-clause-index optionSelection" width="20"><span class="optionIndex ng-binding">B:</span></td>
                <td class="optional-clause multipleSelectionOption"><div compile-html="option"><div class="ng-scope">
                <p>
                    Developer has the sole right to control and direct the means, manner, and method by which the services required by this Agreement will be performed.</p>
            </div></div></td>
            </tr><!-- end ngRepeat: option in options --><tr ng-repeat="option in options" ng-class="getClass($index)" ng-click="selectOption($index, valueIndex, $event)" class="ng-scope unselectedClause">
                <td class="optional-clause-answer optionSelection" width="20"><div ng-class="getCheckboxClass($index)"><input type="checkbox" value="2" ng-checked="field.isSelected($index, valueIndex)" ng-disabled="$parent.$parent.isReadOnly()"></div></td>
                <td class="optional-clause-index optionSelection" width="20"><span class="optionIndex ng-binding">C:</span></td>
                <td class="optional-clause multipleSelectionOption"><div compile-html="option"><div class="ng-scope">
                <p>
                    Developer has the right to perform the services required by this Agreement at any place or location and at such times as Developer may determine.</p>
            </div></div></td>
            </tr><!-- end ngRepeat: option in options --><tr ng-repeat="option in options" ng-class="getClass($index)" ng-click="selectOption($index, valueIndex, $event)" class="ng-scope unselectedClause">
                <td class="optional-clause-answer optionSelection" width="20"><div ng-class="getCheckboxClass($index)"><input type="checkbox" value="3" ng-checked="field.isSelected($index, valueIndex)" ng-disabled="$parent.$parent.isReadOnly()"></div></td>
                <td class="optional-clause-index optionSelection" width="20"><span class="optionIndex ng-binding">D:</span></td>
                <td class="optional-clause multipleSelectionOption"><div compile-html="option"><div class="ng-scope">
                <p>
                    Developer will furnish all equipment and materials used to provide the services required by this Agreement.</p>
            </div></div></td>
            </tr><!-- end ngRepeat: option in options --><tr ng-repeat="option in options" ng-class="getClass($index)" ng-click="selectOption($index, valueIndex, $event)" class="ng-scope unselectedClause">
                <td class="optional-clause-answer optionSelection" width="20"><div ng-class="getCheckboxClass($index)"><input type="checkbox" value="4" ng-checked="field.isSelected($index, valueIndex)" ng-disabled="$parent.$parent.isReadOnly()"></div></td>
                <td class="optional-clause-index optionSelection" width="20"><span class="optionIndex ng-binding">E:</span></td>
                <td class="optional-clause multipleSelectionOption"><div compile-html="option"><div class="ng-scope">
                <p>
                    The services required by this Agreement shall be performed by Developer, or Developer's staff, and Client shall not be required to hire, supervise, or pay any assistants to help Developer.</p>
            </div></div></td>
            </tr><!-- end ngRepeat: option in options --><tr ng-repeat="option in options" ng-class="getClass($index)" ng-click="selectOption($index, valueIndex, $event)" class="ng-scope unselectedClause">
                <td class="optional-clause-answer optionSelection" width="20"><div ng-class="getCheckboxClass($index)"><input type="checkbox" value="5" ng-checked="field.isSelected($index, valueIndex)" ng-disabled="$parent.$parent.isReadOnly()"></div></td>
                <td class="optional-clause-index optionSelection" width="20"><span class="optionIndex ng-binding">F:</span></td>
                <td class="optional-clause multipleSelectionOption"><div compile-html="option"><div class="ng-scope">
                <p>
                    Developer is responsible for paying all ordinary and necessary expenses of its staff</p>
            </div></div></td>
            </tr><!-- end ngRepeat: option in options --><tr ng-repeat="option in options" ng-class="getClass($index)" ng-click="selectOption($index, valueIndex, $event)" class="ng-scope unselectedClause">
                <td class="optional-clause-answer optionSelection" width="20"><div ng-class="getCheckboxClass($index)"><input type="checkbox" value="6" ng-checked="field.isSelected($index, valueIndex)" ng-disabled="$parent.$parent.isReadOnly()"></div></td>
                <td class="optional-clause-index optionSelection" width="20"><span class="optionIndex ng-binding">G:</span></td>
                <td class="optional-clause multipleSelectionOption"><div compile-html="option"><div class="ng-scope">
                <p>
                    Neither Developer nor Developer's staff shall receive any training from Client in the professional skills necessary to perform the services required by this Agreement.</p>
            </div></div></td>
            </tr><!-- end ngRepeat: option in options --><tr ng-repeat="option in options" ng-class="getClass($index)" ng-click="selectOption($index, valueIndex, $event)" class="ng-scope unselectedClause">
                <td class="optional-clause-answer optionSelection" width="20"><div ng-class="getCheckboxClass($index)"><input type="checkbox" value="7" ng-checked="field.isSelected($index, valueIndex)" ng-disabled="$parent.$parent.isReadOnly()"></div></td>
                <td class="optional-clause-index optionSelection" width="20"><span class="optionIndex ng-binding">H:</span></td>
                <td class="optional-clause multipleSelectionOption"><div compile-html="option"><div class="ng-scope">
                <p>
                    Neither Developer nor Developer's staff shall be required to devote themselves full time to the performance of the services required by this Agreement.</p>
            </div></div></td>
            </tr><!-- end ngRepeat: option in options --><tr ng-repeat="option in options" ng-class="getClass($index)" ng-click="selectOption($index, valueIndex, $event)" class="ng-scope unselectedClause">
                <td class="optional-clause-answer optionSelection" width="20"><div ng-class="getCheckboxClass($index)"><input type="checkbox" value="8" ng-checked="field.isSelected($index, valueIndex)" ng-disabled="$parent.$parent.isReadOnly()"></div></td>
                <td class="optional-clause-index optionSelection" width="20"><span class="optionIndex ng-binding">I:</span></td>
                <td class="optional-clause multipleSelectionOption"><div compile-html="option"><div class="ng-scope">
                <p>
                    Client shall not provide insurance coverage of any kind for Developer or Developer's staff.</p>
            </div></div></td>
            </tr><!-- end ngRepeat: option in options --><tr ng-repeat="option in options" ng-class="getClass($index)" ng-click="selectOption($index, valueIndex, $event)" class="ng-scope unselectedClause">
                <td class="optional-clause-answer optionSelection" width="20"><div ng-class="getCheckboxClass($index)"><input type="checkbox" value="9" ng-checked="field.isSelected($index, valueIndex)" ng-disabled="$parent.$parent.isReadOnly()"></div></td>
                <td class="optional-clause-index optionSelection" width="20"><span class="optionIndex ng-binding">J:</span></td>
                <td class="optional-clause multipleSelectionOption"><div compile-html="option"><div class="ng-scope">
                <p>
                    Client shall not withhold from Developer's compensation any amount that would normally be withheld from an employee's pay.</p>
            </div></div></td>
            </tr><!-- end ngRepeat: option in options -->
        </tbody>
    </table>
</div></div>
<div multiple-selection-display="" data-field-name="nonsolicitation of developer's employees" options="options" field="field" fields="fields" value-index="undefined" class="ng-scope ng-isolate-scope"><div class="online-form-optional-clause nolo_field" data-field-name="nonsolicitation of developer's employees" ng-click="setActiveField(field.name, $event, valueIndex); $event.stopPropagation();" value-index="0">
    <h4 class="questionText ng-binding" ng-bind-html="(getInterviewText()) | html"></h4>
    <h5><span class="chooseText ng-binding">Optional Clause:</span> <!-- ngIf: field.hasHelpText() --></h5>
    <table class="multipleSelectionTable">
        <tbody>
            <!-- ngRepeat: option in options --><tr ng-repeat="option in options" ng-class="getClass($index)" ng-click="selectOption($index, valueIndex, $event)" class="ng-scope unselectedClause">
                <td class="optional-clause-answer optionSelection" width="20"><div ng-class="getCheckboxClass($index)"><input type="checkbox" value="0" ng-checked="field.isSelected($index, valueIndex)" ng-disabled="$parent.$parent.isReadOnly()"></div></td>
                <td class="optional-clause-index optionSelection" width="20"><span class="optionIndex ng-binding"></span></td>
                <td class="optional-clause multipleSelectionOption"><div compile-html="option"><div class="ng-scope">
                <div id="clause-23-wrapper" class="clauseWrapper"><h3 class="clauseHeader" id="clause23"><span class="ng-binding ng-scope">24. </span><span class="ng-scope">
                    Nonsolicitation of Developer's Employees<div style="color: rgb(34, 34, 34); font-family: Arial, Verdana, sans-serif; font-size: 12px;;display: inline;display: inline;display: inline;display: inline" class="nolo-help ng-isolate-scope" data-field-help-text="<p>
    Some Web developers fear that the client will hire away a star design or other key employee and do future work on website updates and enhancements in-house. This optional provision is designed to prevent this. The time period during which the client may not knowingly hire or solicit the developer&amp;#39;s employees is usually between six months to two years.</p>" data-field-required="false" data-field-type="help" disabled="disabled" field="fields.get('nonsolicitation of developer\'s employees, help')" name="nonsolicitation of developer's employees, help" src="/ckeditor/plugins/nolohelp/images/help.png" type="text" value="nonsolicitation of developer's employees, help">
    <!-- ngIf: field.hasHelpText() --><i class="icon-question-sign has-help-popover ng-scope" rel="popover" ng-click="showHelpPopover($event)" ng-if="field.hasHelpText()" data-content="<p>
    Some Web developers fear that the client will hire away a star design or other key employee and do future work on website updates and enhancements in-house. This optional provision is designed to prevent this. The time period during which the client may not knowingly hire or solicit the developer&amp;#39;s employees is usually between six months to two years.</p>
" style="display: inline"></i><!-- end ngIf: field.hasHelpText() -->
</div></span></h3></div>
                <p>
                    Client agrees not to knowingly hire or solicit Developer's employees during performance of this Agreement and for a period of&nbsp;<span class="nolo_field inline-editor question-box-edit-dialog ng-scope ng-isolate-scope" data-field-name="nonsolicitation period" nolo-question-box-edit-dialog="" field="field" value-index="undefined">
    <span class="inline-field-value inlineFormElement ng-binding" ng-click="setActiveField(field.name, $event, valueIndex); $event.stopPropagation();" ng-bind-html="(field.displayValue(false, valueIndex)) | html">nonsolicitation period</span>
    <!-- ngIf: field.hasHelpText() -->
</span>after termination of this Agreement without Developer's written consent.</p>
            </div></div></td>
            </tr><!-- end ngRepeat: option in options -->
        </tbody>
    </table>
</div></div>
<br>
<div id="clause-24-wrapper" class="clauseWrapper"><h3 class="clauseHeader" id="clause24"><span class="ng-binding ng-scope">25. </span><span class="ng-scope">
    Designated Representatives</span></h3></div>
<p>
    Each party will designate a representative to receive and send materials, approvals, comments, invoices, and other materials discussed in this agreement.&nbsp;</p>
<p>
    Developer's Representative will be&nbsp;<span class="nolo_field inline-editor question-box-edit-dialog ng-scope ng-isolate-scope" data-field-name="name of developer's representative" nolo-question-box-edit-dialog="" field="field" value-index="undefined">
    <span class="inline-field-value inlineFormElement ng-binding" ng-click="setActiveField(field.name, $event, valueIndex); $event.stopPropagation();" ng-bind-html="(field.displayValue(false, valueIndex)) | html">name of developer's representative</span>
    <!-- ngIf: field.hasHelpText() -->
</span>, who can be contacted by email at&nbsp;<span class="nolo_field inline-editor question-box-edit-dialog ng-scope ng-isolate-scope" data-field-name="email of developer's representative" nolo-question-box-edit-dialog="" field="field" value-index="undefined">
    <span class="inline-field-value inlineFormElement ng-binding" ng-click="setActiveField(field.name, $event, valueIndex); $event.stopPropagation();" ng-bind-html="(field.displayValue(false, valueIndex)) | html">email of developer's representative</span>
    <!-- ngIf: field.hasHelpText() -->
</span>&nbsp;and by telephone at&nbsp;<span class="nolo_field inline-editor question-box-edit-dialog ng-scope ng-isolate-scope" data-field-name="phone number of developer's representative" nolo-question-box-edit-dialog="" field="field" value-index="undefined">
    <span class="inline-field-value inlineFormElement ng-binding" ng-click="setActiveField(field.name, $event, valueIndex); $event.stopPropagation();" ng-bind-html="(field.displayValue(false, valueIndex)) | html">phone number of developer's representative</span>
    <!-- ngIf: field.hasHelpText() -->
</span>.</p>
<p>
    Client's Representative will be&nbsp;<span class="nolo_field inline-editor question-box-edit-dialog ng-scope ng-isolate-scope" data-field-name="name of client's representative" nolo-question-box-edit-dialog="" field="field" value-index="undefined">
    <span class="inline-field-value inlineFormElement ng-binding" ng-click="setActiveField(field.name, $event, valueIndex); $event.stopPropagation();" ng-bind-html="(field.displayValue(false, valueIndex)) | html">name of client's representative</span>
    <!-- ngIf: field.hasHelpText() -->
</span>, who can be contacted by email at&nbsp;<span class="nolo_field inline-editor question-box-edit-dialog ng-scope ng-isolate-scope" data-field-name="email of client's representative" nolo-question-box-edit-dialog="" field="field" value-index="undefined">
    <span class="inline-field-value inlineFormElement ng-binding" ng-click="setActiveField(field.name, $event, valueIndex); $event.stopPropagation();" ng-bind-html="(field.displayValue(false, valueIndex)) | html">email of client's representative</span>
    <!-- ngIf: field.hasHelpText() -->
</span>&nbsp;and by telephone at&nbsp;<span class="nolo_field inline-editor question-box-edit-dialog ng-scope ng-isolate-scope" data-field-name="phone number of client's representative" nolo-question-box-edit-dialog="" field="field" value-index="undefined">
    <span class="inline-field-value inlineFormElement ng-binding" ng-click="setActiveField(field.name, $event, valueIndex); $event.stopPropagation();" ng-bind-html="(field.displayValue(false, valueIndex)) | html">phone number of client's representative</span>
    <!-- ngIf: field.hasHelpText() -->
</span>.</p>
<div multiple-selection-display="" data-field-name="website maintenance and new development" options="options" field="field" fields="fields" value-index="undefined" class="ng-scope ng-isolate-scope"><div class="online-form-optional-clause nolo_field" data-field-name="website maintenance and new development" ng-click="setActiveField(field.name, $event, valueIndex); $event.stopPropagation();" value-index="0">
    <h4 class="questionText ng-binding" ng-bind-html="(getInterviewText()) | html"></h4>
    <h5><span class="chooseText ng-binding">Optional Clause:</span> <!-- ngIf: field.hasHelpText() --><i class="icon-question-sign has-help-popover ng-scope" rel="popover" ng-click="showHelpPopover($event)" ng-if="field.hasHelpText()" data-content="<p>
    If the client is not tech savvy or doesn&amp;#39;t have the time or inclination to do it itself, it will need a person or firm on tap to keep the site running properly and to assist in keeping it up to date. One obvious option is to make the developer responsible for these ongoing chores. If so, you can include these arrangements in the development contract by attaching them.</p>
" style="display: inline"></i><!-- end ngIf: field.hasHelpText() --></h5>
    <table class="multipleSelectionTable">
        <tbody>
            <!-- ngRepeat: option in options --><tr ng-repeat="option in options" ng-class="getClass($index)" ng-click="selectOption($index, valueIndex, $event)" class="ng-scope unselectedClause">
                <td class="optional-clause-answer optionSelection" width="20"><div ng-class="getCheckboxClass($index)"><input type="checkbox" value="0" ng-checked="field.isSelected($index, valueIndex)" ng-disabled="$parent.$parent.isReadOnly()"></div></td>
                <td class="optional-clause-index optionSelection" width="20"><span class="optionIndex ng-binding"></span></td>
                <td class="optional-clause multipleSelectionOption"><div compile-html="option"><div class="ng-scope">
                <div id="clause-25-wrapper" class="clauseWrapper"><h3 class="clauseHeader" id="clause25"><span class="ng-binding ng-scope">26. </span><span class="ng-scope">
                    Website Maintenance and New Development</span></h3></div>
                <p>
                    Developer will maintain the Site or provide additional development after its launch according to the terms stated below:</p>
                <ul>
                    <li>
                        Technical support necessary to maintain reliable performance of the features and functionality of the Site at a rate of $<span class="nolo_field inline-editor question-box-edit-dialog ng-scope ng-isolate-scope" data-field-name="monthly rate for support" nolo-question-box-edit-dialog="" field="field" value-index="undefined">
    <span class="inline-field-value inlineFormElement ng-binding" ng-click="setActiveField(field.name, $event, valueIndex); $event.stopPropagation();" ng-bind-html="(field.displayValue(false, valueIndex)) | html">monthly rate for support</span>
    <!-- ngIf: field.hasHelpText() -->
</span>&nbsp;per month.</li>
                </ul>
                <ul>
                    <li>
                        Consulting and new development services at a rate of $<span class="nolo_field inline-editor question-box-edit-dialog ng-scope ng-isolate-scope" data-field-name="hourly consulting rate" nolo-question-box-edit-dialog="" field="field" value-index="undefined">
    <span class="inline-field-value inlineFormElement ng-binding" ng-click="setActiveField(field.name, $event, valueIndex); $event.stopPropagation();" ng-bind-html="(field.displayValue(false, valueIndex)) | html">hourly consulting rate</span>
    <!-- ngIf: field.hasHelpText() -->
</span>&nbsp;per hour&nbsp;</li>
                </ul>
                <p>
                    Client will pay Developer within 30 days of receiving Developer's invoice. Client grants to Developer a license to reproduce and modify the Site content to provide these services.</p>
            </div></div></td>
            </tr><!-- end ngRepeat: option in options -->
        </tbody>
    </table>
</div></div>
<div multiple-selection-display="" data-field-name="disputes option" options="options" field="field" fields="fields" value-index="undefined" class="ng-scope ng-isolate-scope"><div class="online-form-optional-clause nolo_field" data-field-name="disputes option" ng-click="setActiveField(field.name, $event, valueIndex); $event.stopPropagation();" value-index="0">
    <h4 class="questionText ng-binding" ng-bind-html="(getInterviewText()) | html"></h4>
    <h5><span class="chooseText ng-binding">Optional Clause:</span> <!-- ngIf: field.hasHelpText() --></h5>
    <table class="multipleSelectionTable">
        <tbody>
            <!-- ngRepeat: option in options --><tr ng-repeat="option in options" ng-class="getClass($index)" ng-click="selectOption($index, valueIndex, $event)" class="ng-scope unselectedClause">
                <td class="optional-clause-answer optionSelection" width="20"><div ng-class="getCheckboxClass($index)"><input type="checkbox" value="0" ng-checked="field.isSelected($index, valueIndex)" ng-disabled="$parent.$parent.isReadOnly()"></div></td>
                <td class="optional-clause-index optionSelection" width="20"><span class="optionIndex ng-binding"></span></td>
                <td class="optional-clause multipleSelectionOption"><div compile-html="option"><div class="ng-scope">
                <div id="clause-26-wrapper" class="clauseWrapper"><h3 class="clauseHeader" id="clause26"><span class="ng-binding ng-scope">27. </span><span class="ng-scope">
                    Disputes</span></h3></div>
                <div alternate-selection-display="" data-field-name="disputes alternates" labels="labels" options="options" field="field" fields="fields" value-index="undefined" class="ng-scope ng-isolate-scope"><div class="online-form-optional-clause nolo_field" data-field-name="disputes alternates" ng-click="setActiveField(field.name, $event, valueIndex);  $event.stopPropagation();" value-index="0">
    <h4 class="questionText ng-binding" ng-bind-html="(getInterviewText()) | html"></h4>
    <h5><span class="chooseText">Choose one<!-- ngIf: valueIndex -->:</span> <!-- ngIf: field.hasHelpText() --></h5>
    <table class="alternateSelectionTable">
        <tbody>
            <!-- ngRepeat: option in options track by $index --><tr ng-repeat="option in options track by $index" ng-class="getClass($index)" ng-click="selectOption($index, valueIndex, $event)" class="ng-scope unselectedClause">
                <td class="optional-clause-answer optionSelection" width="20">
                    <div ng-class="getCheckboxClass($index)" class="ng-binding">
                        <input type="radio" ng-model="field.value[valueIndex]" value="mediation only" ng-checked="isSelected($index)" ng-disabled="$parent.$parent.isReadOnly()" class="ng-pristine ng-untouched ng-valid" name="619"> 
                    </div>
                </td>
                <td class="optional-clause-index optionSelection" width="20"><span class="optionIndex ng-binding">A:</span></td>
                <td class="optional-clause alternateSelectionOption"><div compile-html="option"><div class="ng-scope">
                                <p>
                                    If a dispute arises, the parties will try in good faith to settle it through mediation conducted by a mediator to be mutually selected.</p>
                                <p>
                                    Each party will cooperate fully and fairly with the mediator and will attempt to reach a mutually satisfactory compromise to the dispute. If the dispute is not resolved within 30 days after it is referred to the mediator, either party may take the matter to court.</p>
                            </div></div></td>
            </tr><!-- end ngRepeat: option in options track by $index --><tr ng-repeat="option in options track by $index" ng-class="getClass($index)" ng-click="selectOption($index, valueIndex, $event)" class="ng-scope unselectedClause">
                <td class="optional-clause-answer optionSelection" width="20">
                    <div ng-class="getCheckboxClass($index)" class="ng-binding">
                        <input type="radio" ng-model="field.value[valueIndex]" value="mediation to arbitration (no litigation)" ng-checked="isSelected($index)" ng-disabled="$parent.$parent.isReadOnly()" class="ng-pristine ng-untouched ng-valid" name="621"> 
                    </div>
                </td>
                <td class="optional-clause-index optionSelection" width="20"><span class="optionIndex ng-binding">B:</span></td>
                <td class="optional-clause alternateSelectionOption"><div compile-html="option"><div class="ng-scope">
                                <p>
                                    If a dispute arises, the parties will try in good faith to settle it through mediation conducted by a mediator to be mutually selected.</p>
                                <p>
                                    The parties will share the costs of the mediator equally. Each party will cooperate fully and fairly with the mediator and will attempt to reach a mutually satisfactory compromise to the dispute.</p>
                                <p>
                                    If the dispute is not resolved within 30 days after it is referred to the mediator, it will be arbitrated by an arbitrator to be mutually selected. Any arbitration award shall include a written record explaining the decision. Judgment on the arbitration award may be entered in any court that has jurisdiction over the matter. The arbitrator will allocate costs of arbitration, including attorney fees.</p>
                            </div></div></td>
            </tr><!-- end ngRepeat: option in options track by $index -->
        </tbody>
    </table>
</div></div>
            </div></div></td>
            </tr><!-- end ngRepeat: option in options -->
        </tbody>
    </table>
</div></div>
<div id="clause-27-wrapper" class="clauseWrapper"><h3 class="clauseHeader" id="clause27"><span class="ng-binding ng-scope">28. </span><span class="ng-scope">
    Attorney Fees and Expenses<div style="color: rgb(34, 34, 34); font-family: Arial, Verdana, sans-serif; font-size: 12px;;display: inline;display: inline;display: inline;display: inline" class="nolo-help ng-isolate-scope" data-field-help-text="<p>
    Because lawyers are so expensive, having an attorney fee provision -- that is, having each side afraid it will get stuck paying someone else&amp;#39;s attorney fees -- can prove crucial to ending a dispute. This attorney fees provision is mutual, that is, whoever wins the lawsuit is awarded attorney fees. This is fair, and encourages the quick resolution of lawsuits.</p>" data-field-required="false" data-field-type="help" disabled="disabled" field="fields.get('attorney fees and expenses, help')" name="attorney fees and expenses, help" src="/ckeditor/plugins/nolohelp/images/help.png" type="text" value="attorney fees and expenses, help">
    <!-- ngIf: field.hasHelpText() --><i class="icon-question-sign has-help-popover ng-scope" rel="popover" ng-click="showHelpPopover($event)" ng-if="field.hasHelpText()" data-content="<p>
    Because lawyers are so expensive, having an attorney fee provision -- that is, having each side afraid it will get stuck paying someone else&amp;#39;s attorney fees -- can prove crucial to ending a dispute. This attorney fees provision is mutual, that is, whoever wins the lawsuit is awarded attorney fees. This is fair, and encourages the quick resolution of lawsuits.</p>
" style="display: inline"></i><!-- end ngIf: field.hasHelpText() -->
</div></span></h3></div>
<p>
    If there is litigation, the prevailing party may collect from the other party its reasonable costs and attorney fees incurred in enforcing this Agreement.</p>
<div id="clause-28-wrapper" class="clauseWrapper"><h3 class="clauseHeader" id="clause28"><span class="ng-binding ng-scope">29. </span><span class="ng-scope">
    Survival<div style="color: rgb(34, 34, 34); font-family: Arial, Verdana, sans-serif; font-size: 12px;;display: inline;display: inline;display: inline;display: inline" class="nolo-help ng-isolate-scope" data-field-help-text="<p>
    This clause ensures that the sections dealing with the developer&amp;#39;s liability and the client&amp;#39;s warranties will survive any early termination of the agreement.</p>" data-field-required="false" data-field-type="help" disabled="disabled" field="fields.get('survival, help')" name="survival, help" src="/ckeditor/plugins/nolohelp/images/help.png" type="text" value="survival, help">
    <!-- ngIf: field.hasHelpText() --><i class="icon-question-sign has-help-popover ng-scope" rel="popover" ng-click="showHelpPopover($event)" ng-if="field.hasHelpText()" data-content="<p>
    This clause ensures that the sections dealing with the developer&amp;#39;s liability and the client&amp;#39;s warranties will survive any early termination of the agreement.</p>
" style="display: inline"></i><!-- end ngIf: field.hasHelpText() -->
</div></span></h3></div>
<p>
    The provisions of Sections 16 through 18&nbsp; will survive any termination of this Agreement.</p>
<div id="clause-29-wrapper" class="clauseWrapper"><h3 class="clauseHeader" id="clause29"><span class="ng-binding ng-scope">30. </span><span class="ng-scope">
    General Provisions<div style="color: rgb(34, 34, 34); font-family: Arial, Verdana, sans-serif; font-size: 12px;;display: inline;display: inline;display: inline;display: inline" class="nolo-help ng-isolate-scope" data-field-help-text="<p>
    <span style=&quot;font-size: 12px;&quot;>Following are several provisions that are customarily lumped together at the end of a development agreement. This does not mean they are unimportant.</span></p>" data-field-required="false" data-field-type="help" disabled="disabled" field="fields.get('general provisions, help')" name="general provisions, help" src="/ckeditor/plugins/nolohelp/images/help.png" type="text" value="general provisions, help">
    <!-- ngIf: field.hasHelpText() --><i class="icon-question-sign has-help-popover ng-scope" rel="popover" ng-click="showHelpPopover($event)" ng-if="field.hasHelpText()" data-content="<p>
    <span style=&quot;font-size: 12px;&quot;>Following are several provisions that are customarily lumped together at the end of a development agreement. This does not mean they are unimportant.</span></p>
" style="display: inline"></i><!-- end ngIf: field.hasHelpText() -->
</div></span></h3></div>
<p>
    (a)	Complete Agreement: This Agreement, together with all exhibits, appendixes, or other attachments, which are incorporated by reference, is the sole and entire Agreement between the parties. This Agreement supersedes all prior understandings, agreements, and documentation relating to such subject matter. <div style="display: inline;display: inline" class="nolo-help ng-isolate-scope" data-field-help-text="<p>
    This clause helps make it clear to a court or arbitrator that the parties intended the contract to be their final agreement. A clause such as this helps avoid claims that promises not contained in the written contract were made and broken.&amp;nbsp;</p>" data-field-required="false" data-field-type="help" disabled="disabled" field="fields.get('complete agreement, help')" name="complete agreement, help" src="/ckeditor/plugins/nolohelp/images/help.png" type="text" value="complete agreement, help">
    <!-- ngIf: field.hasHelpText() --><i class="icon-question-sign has-help-popover ng-scope" rel="popover" ng-click="showHelpPopover($event)" ng-if="field.hasHelpText()" data-content="<p>
    This clause helps make it clear to a court or arbitrator that the parties intended the contract to be their final agreement. A clause such as this helps avoid claims that promises not contained in the written contract were made and broken.&amp;nbsp;</p>
" style="display: inline"></i><!-- end ngIf: field.hasHelpText() -->
</div></p>
<p>
    (b) Modifications to Agreement: Modifications and amendments to this Agreement, including any exhibit or appendix hereto, shall be enforceable only if they are in writing and are signed by authorized representatives of both parties.<div style="display: inline;display: inline" class="nolo-help ng-isolate-scope" data-field-help-text="<p>
    This clause, which is very important, provides that any changes to the agreement must be in writing and agreed to by both parties to be effective. This provision protects both parties; reducing all modifications to writing lessens the possibility of misunderstandings. In addition, oral modifications may not be legally binding.</p>" data-field-required="false" data-field-type="help" disabled="disabled" field="fields.get('modifications, help')" name="modifications, help" src="/ckeditor/plugins/nolohelp/images/help.png" type="text" value="modifications, help">
    <!-- ngIf: field.hasHelpText() --><i class="icon-question-sign has-help-popover ng-scope" rel="popover" ng-click="showHelpPopover($event)" ng-if="field.hasHelpText()" data-content="<p>
    This clause, which is very important, provides that any changes to the agreement must be in writing and agreed to by both parties to be effective. This provision protects both parties; reducing all modifications to writing lessens the possibility of misunderstandings. In addition, oral modifications may not be legally binding.</p>
" style="display: inline"></i><!-- end ngIf: field.hasHelpText() -->
</div></p>
<p>
    (c) Applicable Law: This Agreement will be governed by the laws of the State of&nbsp;<span class="nolo_field inline-editor question-box-edit-dialog ng-scope ng-isolate-scope" data-field-name="state name" nolo-question-box-edit-dialog="" field="field" value-index="undefined">
    <span class="inline-field-value inlineFormElement ng-binding" ng-click="setActiveField(field.name, $event, valueIndex); $event.stopPropagation();" ng-bind-html="(field.displayValue(false, valueIndex)) | html">state name</span>
    <!-- ngIf: field.hasHelpText() -->
</span>.<div style="display: inline;display: inline" class="nolo-help ng-isolate-scope" data-field-help-text="<p>
    <span style=&quot;font-size: 12px;&quot;>This clause specifies which state law governs the contract. This should be the state in which the developer and client do business or are incorporated.</span></p>" data-field-required="false" data-field-type="help" disabled="disabled" field="fields.get('applicable law, help')" name="applicable law, help" src="/ckeditor/plugins/nolohelp/images/help.png" type="text" value="applicable law, help">
    <!-- ngIf: field.hasHelpText() --><i class="icon-question-sign has-help-popover ng-scope" rel="popover" ng-click="showHelpPopover($event)" ng-if="field.hasHelpText()" data-content="<p>
    <span style=&quot;font-size: 12px;&quot;>This clause specifies which state law governs the contract. This should be the state in which the developer and client do business or are incorporated.</span></p>
" style="display: inline"></i><!-- end ngIf: field.hasHelpText() -->
</div></p>
<p>
    (d) Notices: All notices and other communications given in connection with this Agreement shall be in writing and shall be deemed given as follows:<div style="display: inline;display: inline" class="nolo-help ng-isolate-scope" data-field-help-text="<p>
    When one or both parties want to do something important involving the agreement -- such as terminate it -- they need to tell the opposite party about it.&amp;nbsp;This provision gives several options for providing notice. If you give notice by mail, it is not effective until three days after it&amp;#39;s sent.&amp;nbsp;For example, if you want to end the agreement on 30 days notice and mail your notice of termination, the agreement will not end until 33 days after you mailed the notice.</p>" data-field-required="false" data-field-type="help" disabled="disabled" field="fields.get('notices, help')" name="notices, help" src="/ckeditor/plugins/nolohelp/images/help.png" type="text" value="notices, help">
    <!-- ngIf: field.hasHelpText() --><i class="icon-question-sign has-help-popover ng-scope" rel="popover" ng-click="showHelpPopover($event)" ng-if="field.hasHelpText()" data-content="<p>
    When one or both parties want to do something important involving the agreement -- such as terminate it -- they need to tell the opposite party about it.&amp;nbsp;This provision gives several options for providing notice. If you give notice by mail, it is not effective until three days after it&amp;#39;s sent.&amp;nbsp;For example, if you want to end the agreement on 30 days notice and mail your notice of termination, the agreement will not end until 33 days after you mailed the notice.</p>
" style="display: inline"></i><!-- end ngIf: field.hasHelpText() -->
</div></p>
<ul>
    <li>
        When delivered personally to the recipient's address as appearing in the introductory paragraph to this Agreement;</li>
</ul>
<ul>
    <li>
        Three days after being deposited in the United States mails, postage prepaid to the recipient's address as appearing in the introductory paragraph to this Agreement; or</li>
</ul>
<ul>
    <li>
        When sent by fax or electronic mail. Notice is effective upon receipt provided that a duplicate copy of the notice is promptly given by first-class or certified mail, or the recipient delivers a written confirmation of receipt.</li>
</ul>
<p>
    (e) No Agency: Nothing contained herein will be construed as creating any agency, partnership, joint venture, or other form of joint enterprise between the parties.<div style="display: inline;display: inline" class="nolo-help ng-isolate-scope" data-field-help-text="<p>
    <span style=&quot;font-size: 12px;&quot;>This clause helps to make sure that the developer and the client are separate legal entities, not partners or coventurers. If a client is viewed as the developer&amp;#39;s partner, the developer&amp;nbsp;will be liable for its debts and the client will have the power to make contracts that obligate the developer&amp;nbsp;to others without its consent.</span></p>" data-field-required="false" data-field-type="help" disabled="disabled" field="fields.get('no agency, help')" name="no agency, help" src="/ckeditor/plugins/nolohelp/images/help.png" type="text" value="no agency, help">
    <!-- ngIf: field.hasHelpText() --><i class="icon-question-sign has-help-popover ng-scope" rel="popover" ng-click="showHelpPopover($event)" ng-if="field.hasHelpText()" data-content="<p>
    <span style=&quot;font-size: 12px;&quot;>This clause helps to make sure that the developer and the client are separate legal entities, not partners or coventurers. If a client is viewed as the developer&amp;#39;s partner, the developer&amp;nbsp;will be liable for its debts and the client will have the power to make contracts that obligate the developer&amp;nbsp;to others without its consent.</span></p>
" style="display: inline"></i><!-- end ngIf: field.hasHelpText() -->
</div></p>
<p>
    (f) Assignment: The rights and obligations under this Agreement are freely assignable by either party. Client shall retain the obligation to pay if the assignee fails to pay as required by this Agreement.<div style="display: inline;display: inline" class="nolo-help ng-isolate-scope" data-field-help-text="<p>
    <span style=&quot;font-size: 12px;&quot;>An assignment is the process by which rights or duties under a contract are transferred to someone else. For example, the developer may assign its duty to perform services for the client to someone else. This clause gives both parties an unfettered right to assign their rights or obligations.</span></p>" data-field-required="false" data-field-type="help" disabled="disabled" field="fields.get('assignment, help')" name="assignment, help" src="/ckeditor/plugins/nolohelp/images/help.png" type="text" value="assignment, help">
    <!-- ngIf: field.hasHelpText() --><i class="icon-question-sign has-help-popover ng-scope" rel="popover" ng-click="showHelpPopover($event)" ng-if="field.hasHelpText()" data-content="<p>
    <span style=&quot;font-size: 12px;&quot;>An assignment is the process by which rights or duties under a contract are transferred to someone else. For example, the developer may assign its duty to perform services for the client to someone else. This clause gives both parties an unfettered right to assign their rights or obligations.</span></p>
" style="display: inline"></i><!-- end ngIf: field.hasHelpText() -->
</div></p>
<p>
    (g) Successors and Assigns: This agreement binds and benefits the heirs, successors, and assigns of the parties.<div style="display: inline;display: inline" class="nolo-help ng-isolate-scope" data-field-help-text="<p>
    It&amp;#39;s possible that either party will be succeeded by someone else. For example, a sole proprietor&amp;#39;s heirs may inherit the business. In that case, you&amp;#39;d want to make sure that the heirs are bound by all the requirements of the agreement, such as confidentiality requirements.&amp;nbsp;</p>" data-field-required="false" data-field-type="help" disabled="disabled" field="fields.get('successors and assigns, help')" name="successors and assigns, help" src="/ckeditor/plugins/nolohelp/images/help.png" type="text" value="successors and assigns, help">
    <!-- ngIf: field.hasHelpText() --><i class="icon-question-sign has-help-popover ng-scope" rel="popover" ng-click="showHelpPopover($event)" ng-if="field.hasHelpText()" data-content="<p>
    It&amp;#39;s possible that either party will be succeeded by someone else. For example, a sole proprietor&amp;#39;s heirs may inherit the business. In that case, you&amp;#39;d want to make sure that the heirs are bound by all the requirements of the agreement, such as confidentiality requirements.&amp;nbsp;</p>
" style="display: inline"></i><!-- end ngIf: field.hasHelpText() -->
</div></p>
<p>
    (h) Severability: If a court finds any provision of this Agreement invalid or unenforceable, the remainder of this Agreement will be interpreted so as best to carry out the parties' intent.<div style="display: inline;display: inline" class="nolo-help ng-isolate-scope" data-field-help-text="<p>
    <span style=&quot;font-size: 12px;&quot;>This clause -- which lawyers call a severability clause --provides that if you wind up in a lawsuit over the agreement and a court rules that one part of the agreement is invalid, that part can be cut out but the rest of the agreement will remain valid. If you don&amp;#39;t include a clause like this and some portion of your agreement is deemed invalid, the whole agreement may be canceled.</span></p>" data-field-required="false" data-field-type="help" disabled="disabled" field="fields.get('severability, help')" name="severability, help" src="/ckeditor/plugins/nolohelp/images/help.png" type="text" value="severability, help">
    <!-- ngIf: field.hasHelpText() --><i class="icon-question-sign has-help-popover ng-scope" rel="popover" ng-click="showHelpPopover($event)" ng-if="field.hasHelpText()" data-content="<p>
    <span style=&quot;font-size: 12px;&quot;>This clause -- which lawyers call a severability clause --provides that if you wind up in a lawsuit over the agreement and a court rules that one part of the agreement is invalid, that part can be cut out but the rest of the agreement will remain valid. If you don&amp;#39;t include a clause like this and some portion of your agreement is deemed invalid, the whole agreement may be canceled.</span></p>
" style="display: inline"></i><!-- end ngIf: field.hasHelpText() -->
</div></p>
<div class="nolo-keep-together-content">
        <div id="clause-30-wrapper" class="clauseWrapper"><h3 class="clauseHeader" id="clause30"><span class="ng-binding ng-scope">31. </span><span class="ng-scope">
            Signatures</span></h3></div>
        <p>
            Each party represents and warrants that on this date they are duly authorized to bind their respective principals by their signatures below.</p>
        <p>
            <br>
            CLIENT</p>
        <div>
            <div>
                <span class="nolo_field inline-editor question-box-edit-dialog ng-scope ng-isolate-scope" data-field-name="client name" nolo-question-box-edit-dialog="" field="field" value-index="undefined">
    <span class="inline-field-value inlineFormElement ng-binding" ng-click="setActiveField(field.name, $event, valueIndex); $event.stopPropagation();" ng-bind-html="(field.displayValue(false, valueIndex)) | html">Client_Name</span>
    <!-- ngIf: field.hasHelpText() --><i class="icon-question-sign has-help-popover ng-scope" rel="popover" ng-click="showHelpPopover($event)" ng-if="field.hasHelpText()" data-content="<p>
    This can be your own name or a fictitious business name or assumed name you use to identify the client business. For example, if Jane Adams calls her business &amp;quot;ABC Services,&amp;quot; she would use that name on the contract. Using a fictitious business name helps show you&amp;#39;re a business, not an employee.</p>
<p>
    If your business is incorporated, use your corporation name, not your own name -- for example: &amp;quot;John Smith, Incorporated&amp;quot; instead of &amp;quot;John Smith.&amp;quot; If you&amp;#39;re a limited liability company, use the name of your company -- for example, &amp;quot;John Smith, LLC,&amp;quot; instead of just &amp;quot;John Smith.&amp;quot; If you&amp;#39;re a partner in a partnership, use your partnership name -- for example, &amp;quot;The Smith Partnership&amp;quot; instead of &amp;quot;John Smith.&amp;quot;</p>
" style="display: inline"></i><!-- end ngIf: field.hasHelpText() -->
</span></div>
            <span class="nolo_field inline-editor question-box-edit-dialog ng-scope ng-isolate-scope" data-field-name="name of entity" nolo-question-box-edit-dialog="" field="field" value-index="undefined">
    <span class="inline-field-value inlineFormElement ng-binding" ng-click="setActiveField(field.name, $event, valueIndex); $event.stopPropagation();" ng-bind-html="(field.displayValue(false, valueIndex)) | html">name of entity</span>
    <!-- ngIf: field.hasHelpText() -->
</span>
            <div>
                <span class="nolo_field inline-editor question-box-edit-dialog ng-scope ng-isolate-scope" data-field-name="type of entity" nolo-question-box-edit-dialog="" field="field" value-index="undefined">
    <span class="inline-field-value inlineFormElement ng-binding" ng-click="setActiveField(field.name, $event, valueIndex); $event.stopPropagation();" ng-bind-html="(field.displayValue(false, valueIndex)) | html">type of entity</span>
    <!-- ngIf: field.hasHelpText() -->
</span><br>
                <div>
                    <span class="nolo_field inline-editor question-box-edit-dialog ng-scope ng-isolate-scope" data-field-name="title signing party" nolo-question-box-edit-dialog="" field="field" value-index="undefined">
    <span class="inline-field-value inlineFormElement ng-binding" ng-click="setActiveField(field.name, $event, valueIndex); $event.stopPropagation();" ng-bind-html="(field.displayValue(false, valueIndex)) | html">title signing party</span>
    <!-- ngIf: field.hasHelpText() --><i class="icon-question-sign has-help-popover ng-scope" rel="popover" ng-click="showHelpPopover($event)" ng-if="field.hasHelpText()" data-content="<p>
    The &amp;quot;title&amp;quot; reflects the person&amp;#39;s legal capacity to bind the employer. For example, a single owner (sole proprietor) may use the title, &amp;quot;Owner,&amp;quot; or &amp;quot;President.&amp;quot; A person signing on behalf of a partnership may list &amp;quot;General Partner.&amp;quot; A person signing on behalf of a corporation or LLC should list their official title, for example, &amp;quot;Vice-President of Marketing.&amp;quot;</p>
" style="display: inline"></i><!-- end ngIf: field.hasHelpText() -->
</span></div>
                <div>
                    <span class="nolo_field inline-editor question-box-edit-dialog ng-scope ng-isolate-scope" data-field-name="address of client" nolo-question-box-edit-dialog="" field="field" value-index="undefined">
    <span class="inline-field-value inlineFormElement ng-binding" ng-click="setActiveField(field.name, $event, valueIndex); $event.stopPropagation();" ng-bind-html="(field.displayValue(false, valueIndex)) | html">address of client</span>
    <!-- ngIf: field.hasHelpText() -->
</span></div>
                <div>
                    &nbsp;</div>
            </div>
            <div>
                Client Signature: _________________________________<br>
                <div>
                    Date: _________________________________________</div>
            </div>
        </div>
        <p>
            &nbsp;</p>
        <p>
            DEVELOPER</p>
        <div>
            <span class="nolo_field inline-editor question-box-edit-dialog ng-scope ng-isolate-scope" data-field-name="developer name" nolo-question-box-edit-dialog="" field="field" value-index="undefined">
    <span class="inline-field-value inlineFormElement ng-binding" ng-click="setActiveField(field.name, $event, valueIndex); $event.stopPropagation();" ng-bind-html="(field.displayValue(false, valueIndex)) | html">Your_Name</span>
    <!-- ngIf: field.hasHelpText() --><i class="icon-question-sign has-help-popover ng-scope" rel="popover" ng-click="showHelpPopover($event)" ng-if="field.hasHelpText()" data-content="<p>
    This can be your own name or a fictitious business name or assumed name you use to identify your business. For example, if Jane Adams calls her Web development business &amp;quot;ABC Web Development,&amp;quot; she would use that name on the contract. Using a fictitious business name helps show you&amp;#39;re a business, not an employee.</p>
<p>
    If your business is incorporated, use your corporation name, not your own name -- for example: &amp;quot;John Smith, Incorporated&amp;quot; instead of &amp;quot;John Smith.&amp;quot; If you&amp;#39;re a limited liability company, use the name of your company -- for example, &amp;quot;John Smith, LLC,&amp;quot; instead of just &amp;quot;John Smith.&amp;quot; If you&amp;#39;re a partner in a partnership, use your partnership name -- for example, &amp;quot;The Smith Partnership&amp;quot; instead of &amp;quot;John Smith.&amp;quot;</p>
" style="display: inline"></i><!-- end ngIf: field.hasHelpText() -->
</span></div>
        <div>
            <span class="nolo_field inline-editor question-box-edit-dialog ng-scope ng-isolate-scope" data-field-name="name of entity 2" nolo-question-box-edit-dialog="" field="field" value-index="undefined">
    <span class="inline-field-value inlineFormElement ng-binding" ng-click="setActiveField(field.name, $event, valueIndex); $event.stopPropagation();" ng-bind-html="(field.displayValue(false, valueIndex)) | html">name of entity 2</span>
    <!-- ngIf: field.hasHelpText() -->
</span><br>
            <div>
                <span class="nolo_field inline-editor question-box-edit-dialog ng-scope ng-isolate-scope" data-field-name="type of entity 2" nolo-question-box-edit-dialog="" field="field" value-index="undefined">
    <span class="inline-field-value inlineFormElement ng-binding" ng-click="setActiveField(field.name, $event, valueIndex); $event.stopPropagation();" ng-bind-html="(field.displayValue(false, valueIndex)) | html">type of entity 2</span>
    <!-- ngIf: field.hasHelpText() -->
</span><br>
                <div>
                    <span class="nolo_field inline-editor question-box-edit-dialog ng-scope ng-isolate-scope" data-field-name="title signing party 2" nolo-question-box-edit-dialog="" field="field" value-index="undefined">
    <span class="inline-field-value inlineFormElement ng-binding" ng-click="setActiveField(field.name, $event, valueIndex); $event.stopPropagation();" ng-bind-html="(field.displayValue(false, valueIndex)) | html">title signing party 2</span>
    <!-- ngIf: field.hasHelpText() --><i class="icon-question-sign has-help-popover ng-scope" rel="popover" ng-click="showHelpPopover($event)" ng-if="field.hasHelpText()" data-content="<p>
    The &amp;quot;title&amp;quot; reflects the person&amp;#39;s legal capacity to bind the employer. For example, a single owner (sole proprietor) may use the title, &amp;quot;Owner,&amp;quot; or &amp;quot;President.&amp;quot; A person signing on behalf of a partnership may list &amp;quot;General Partner.&amp;quot; A person signing on behalf of a corporation or LLC should list their official title, for example, &amp;quot;Vice-President of Marketing.&amp;quot;</p>
" style="display: inline"></i><!-- end ngIf: field.hasHelpText() -->
</span><br>
                    <span class="nolo_field inline-editor question-box-edit-dialog ng-scope ng-isolate-scope" data-field-name="address of developer" nolo-question-box-edit-dialog="" field="field" value-index="undefined">
    <span class="inline-field-value inlineFormElement ng-binding" ng-click="setActiveField(field.name, $event, valueIndex); $event.stopPropagation();" ng-bind-html="(field.displayValue(false, valueIndex)) | html">address of developer</span>
    <!-- ngIf: field.hasHelpText() -->
</span></div>
                <div>
                    &nbsp;</div>
            </div>
            <div>
                Developer Signature:&nbsp;_________________________________<br>
                Date: _____________________________________________</div>
        </div>
    </div>
                    <a
                        href="#Style-It"
                        data-ix="arrow-appear"
                        class="go-down-link-mobile w-hidden-main w-hidden-medium w-inline-block"><img
                        src="https://httpsimage.com/v2/f61bce67-24f9-4956-a606-1b2f79c9689c.png"
                        width="50"
                        data-ix="arrowhovereffect"/></a>
                    <h1 id="Style-It" class="example-title">End of Contract</h1>
                </div>
            </div>
        </div>
        <div id="Section-3" class="example bluebackground">
            <div id="FormBlockGetInTouch" class="form-block-2 w-form">
                <div class="success-message-2 w-form-done">
                    <div>
                        <strong>Your Inquiry has been received, thank you! We will follow up with a
                            response as soon as possible.</strong>
                    </div>
                </div>
                <div class="error-message w-form-fail">
                    <div>
                        <strong>Oops! Something went wrong while submitting the form.</strong>
                    </div>
                </div>
            </div>
        </div>
        <script
            src="https://code.jquery.com/jquery-3.3.1.min.js"
            type="text/javascript"
            integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8="
            crossorigin="anonymous"></script>
        <script
            src="https://uploads-ssl.webflow.com/5a04b009b12683000102a365/js/mrgi.9c83540d6.js"
            type="text/javascript"></script>
        <!--[if lte IE 9]><script
        src="//cdnjs.cloudflare.com/ajax/libs/placeholders/3.0.2/placeholders.min.js"></script><![endif]-->
        <script>
            (function ($, hljs, undefined) {
                'use strict'

                var $document = $(document)
                var $window = $(window)

                hljs.initHighlightingOnLoad()

                try {
                    if ('serviceWorker' in navigator) {
                        navigator
                            .serviceWorker
                            .register('/assets/js/service-worker.js')
                    }
                } catch (ex) {
                    console.error(ex)
                }

                $document.ready(function () {
                    var $postContent = $(".post-content")
                    var $btnNav = $('#btn-nav')
                    var $navEl = $('#main-nav')
                    var $floatingCta = $('.floating-cta')
                    var $interactiveCard = $('.card.interactive')
                    var $cardLink = $('.card a').first()
                    var cardLinkValue = $cardLink.attr('href')
                    var $ctaServices = $('#cta-services')
                    var $ctaSupport = $('#cta-support')
                    var $searchField = $('#search-field')

                    // setup search field
                    $searchField.ghostHunter({
                        includepages   : true,
                        onKeyUp        : true,
                        result_template: "<a href='\{\{link\}\}'><p><h1>\{\{title\}\}</h1><h4>\{\{pubDate\}\}</h4>\{\{de" +
                                "scription\}\}</p></a>",
                        results        : '#results'
                    })
                    $searchField.keyup(function (event) {
                        if (event.target.value === "") {
                            $searchField.clear();
                        }
                    })

                    if (cardLinkValue) {
                        $cardLink.attr(
                            'href',
                            cardLinkValue + '&utm_content=' + window.location.pathname
                        )
                    }

                    $interactiveCard.on('click', 'button', function (e) {
                        if ($(e.toElement).attr('data-answer') === 'correct') {
                            setTimeout(function () {
                                $interactiveCard
                                    .find('#answer-correct')
                                    .show()
                            }, 2100)
                        } else {
                            setTimeout(function () {
                                $interactiveCard
                                    .find('#answer-incorrect')
                                    .show()
                            }, 2100)
                        }
                        $interactiveCard
                            .find('button')
                            .hide()
                        $interactiveCard
                            .find('.spinner')
                            .show()

                        setTimeout(function () {
                            $interactiveCard
                                .find('.spinner')
                                .hide()
                        }, 2000)
                    })

                    $btnNav.on('click', function (e) {
                        if (!$navEl.is(':visible')) {
                            $navEl.show()
                        } else {
                            $navEl.hide()
                        }
                    })

                    /*
      * Adding the dropdown stuffz
      * */
                    $('.dropdown-toggle').on('mouseenter', function () {
                        $(this).addClass('active')
                    })

                    $('.dropdown-toggle').on('mouseleave', function () {
                        $(this).removeClass('active')
                    })
                })

                function progressBar() {
                    // grabbed from the www not my proudest commit IIFE so no side-effects happen
                    // TODO: refactor
                    var getMax = function () {
                        return $document.height() - $(window).height()
                    }

                    var getValue = function () {
                        return $window.scrollTop()
                    }

                    var getWidth = function () {
                        // Calculate width in percentage
                        value = getValue()
                        width = (value / max) * 100
                        width = width + '%'
                        return width
                    }

                    var setWidth = function () {
                        progressBar.css({width: getWidth()})
                    }

                    var progressBar = $('.progress-bar')
                    var max = getMax()
                    var value
                    var width

                    $document.on('scroll', setWidth)
                    $window.on('resize', function () {
                        // Need to reset the Max attr
                        max = getMax()
                        setWidth()
                    })
                }

                progressBar()

                window.addEventListener("load", function () {
                    window
                        .cookieconsent
                        .initialise({
                            "content" : {
                                "href": "https://blog.risingstack.com/privacy-policy/"
                            },
                            "location": true,
                            "palette" : {
                                "button": {
                                    "background": "#8ec760",
                                    "text"      : "#ffffff"
                                },
                                "popup" : {
                                    "background": "#dedede",
                                    "text"      : "#404040"
                                }
                            },
                            "theme"   : "edgeless"
                        })
                })

                window.twttr = (function (d, s, id) {
                    var js,
                        fjs = d.getElementsByTagName(s)[0],
                        t   = window.twttr || {}
                    if (d.getElementById(id)) 
                        return t
                    js     = d.createElement(s)
                    js.id  = id
                    js.src = "https://platform.twitter.com/widgets.js"
                    fjs
                        .parentNode
                        .insertBefore(js, fjs)

                    t._e    = []
                    t.ready = function (f) {
                        t
                            ._e
                            .push(f)
                    }

                    return t
                }(document, "script", "twitter-wjs"))

            })(jQuery, hljs)
        </script>
